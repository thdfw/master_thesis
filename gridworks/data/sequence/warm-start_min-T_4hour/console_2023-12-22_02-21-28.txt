(ada) thomasdefauw@Macbook-pro-2011 gridworks % python master.py

Problem type: Non-linear
Variables: Continuous (relaxed or fixed binary)
Solver: Ipopt

Time step: 2 minutes
Horizon: 4.0 hours (120 time steps)
Simulation: 10 hours (10 iterations)

Results file (enter to skip): 

#########################################
Buffer: [314.0, 314.6, 313.7, 308.8] 
Storage: [310, 310, 310, 310, 310, 310, 310, 310, 310, 310, 310, 310]
Electricity forecasts: [14.64, 18.93, 45.56, 26.42]

Searching for optimal sequence...
Data was appended to results_2023-12-21_10-17-20.csv
#########################################

-----------------------------------------------------
Iteration 1.0 (0h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h00-0h30: [1, 1, 1]
0h30-1h00: [1, 1, 1]
1h00-1h30: [0, 0, 0]
1h30-2h00: [1, 1, 1]

Solving the optimization problem...

******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

Done in 82.4 seconds.

Initial state
B     -- 314.0 | S        310.0 --    310.0 --   310.0 --
         314.6 |          310.0       310.0      310.0
         313.7 |          310.0       310.0      310.0
      -- 308.8 |       -- 310.0    -- 310.0   -- 310.0

Next state
B -0.3-> 323.2 | S        310.0 <-    310.0 <-   310.0 <-0.0-
         322.2 |          310.0       310.0      310.0
         321.3 |          310.0       310.0      310.0
  <-0.3- 320.4 |   <-0.0- 310.0    <- 310.0   <- 310.0

Q_HP = [14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000]
Resistive elements: [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5]

Cost of next 4 hours: 6.74 $
[14.64, 18.93, 45.56, 26.42]

#########################################
Buffer: [323.1745761982824, 322.24061611863493, 321.30627009219785, 320.37123574435356] 
Storage: [309.99999747544507, 310.0, 310.0, 310.0, 310.0, 310.0, 310.0, 310.0, 310.0, 310.0, 310.0, 310.0]
Electricity forecasts: [18.93, 45.56, 26.42, 18.0]

Searching for optimal sequence...
Data was appended to results_2023-12-21_10-17-20.csv
#########################################

-----------------------------------------------------
Iteration 2.0 (1h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h00-0h30: [1, 1, 1]
0h30-1h00: [0, 0, 0]
1h00-1h30: [1, 1, 1]
1h30-2h00: [1, 1, 1]

Solving the optimization problem...
Done in 14.1 seconds.

Initial state
B     -- 323.2 | S        310.0 --    310.0 --   310.0 --
         322.2 |          310.0       310.0      310.0
         321.3 |          310.0       310.0      310.0
      -- 320.4 |       -- 310.0    -- 310.0   -- 310.0

Next state
B -0.3-> 332.2 | S        310.0 <-    310.0 <-   310.0 <-0.0-
         331.2 |          310.0       310.0      310.0
         330.3 |          310.0       310.0      310.0
  <-0.3- 329.4 |   <-0.0- 310.0    <- 310.0   <- 310.0

Q_HP = [14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000]
Resistive elements: [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5]

Cost of next 4 hours: 6.31 $
[18.93, 45.56, 26.42, 18.0]

#########################################
Buffer: [332.1730784464196, 331.2385828438076, 330.3040871224122, 329.3695911439434] 
Storage: [309.99999327049125, 310.00000000000085, 310.0, 310.0, 310.0, 310.0, 310.0, 310.0, 310.0, 310.0, 310.0, 310.0]
Electricity forecasts: [45.56, 26.42, 18.0, 17.17]

Searching for optimal sequence...
Data was appended to results_2023-12-21_10-17-20.csv
#########################################

-----------------------------------------------------
Iteration 3.0 (2h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h00-0h30: [0, 0, 0]
0h30-1h00: [1, 1, 1]
1h00-1h30: [1, 1, 1]
1h30-2h00: [1, 1, 1]

Solving the optimization problem...
Done in 46.6 seconds.

Initial state
B     -- 332.2 | S        310.0 --    310.0 --   310.0 --
         331.2 |          310.0       310.0      310.0
         330.3 |          310.0       310.0      310.0
      -- 329.4 |       -- 310.0    -- 310.0   -- 310.0

Next state
B <-0.1- 322.3 | S        308.8 ->    309.9 ->   310.0 -0.1->
         316.9 |          308.3       309.8      310.0
         311.9 |          308.1       309.6      310.0
  -0.1-> 308.9 |   -0.1-> 308.0    -> 309.3   -> 310.0

Q_HP = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Resistive elements: [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5]

Cost of next 4 hours: 5.27 $
[45.56, 26.42, 18.0, 17.17]

#########################################
Buffer: [322.27889763895837, 316.86619805777815, 311.87962127024275, 308.878632041372] 
Storage: [309.9998069159751, 309.99900555441144, 309.99555907834406, 309.9829041996048, 309.9436134522608, 309.84184145093946, 309.6259552888129, 309.2606330415792, 308.7863725798897, 308.34284316017937, 308.0768372230569, 307.9999970074269]
Electricity forecasts: [26.42, 18.0, 17.17, 16.19]

Searching for optimal sequence...
Data was appended to results_2023-12-21_10-17-20.csv
#########################################

-----------------------------------------------------
Iteration 4.0 (3h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h00-0h30: [1, 1, 1]
0h30-1h00: [1, 1, 1]
1h00-1h30: [1, 1, 1]
1h30-2h00: [1, 1, 1]

Solving the optimization problem...
Done in 26.5 seconds.

Initial state
B     -- 322.3 | S        308.8 --    309.9 --   310.0 --
         316.9 |          308.3       309.8      310.0
         311.9 |          308.1       309.6      310.0
      -- 308.9 |       -- 308.0    -- 309.3   -- 310.0

Next state
B -0.3-> 311.7 | S        309.3 <-    310.0 <-   311.0 <-0.0-
         312.0 |          308.9       309.9      310.0
         312.2 |          308.5       309.8      310.0
  <-0.3- 312.5 |   <-0.0- 308.2    <- 309.6   <- 310.0

Q_HP = [11969, 10759, 9293, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000]
Resistive elements: [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5]

Cost of next 4 hours: 6.86 $
[26.42, 18.0, 17.17, 16.19]

#########################################
Buffer: [311.7170613777606, 311.96223568765885, 312.2381535649123, 312.5123264012154] 
Storage: [310.72807693454126, 310.34319000158825, 310.1039439554286, 310.0148481038609, 309.9798211531825, 309.9310937058351, 309.8225409364992, 309.6124042149726, 309.2822602233551, 308.87218878931117, 308.48142442505025, 308.20542406416297]
Electricity forecasts: [18.0, 17.17, 16.19, 30.74]

Searching for optimal sequence...

******* combi1=[0, 0, 0] *******
combi1 = [0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'

******* combi1=[0, 1, 0] *******
combi1 = [0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'

******* combi1=[1, 0, 1] *******
combi1 = [1, 0, 1] is feasible. Testing for combi2:
- combi1=[1, 0, 1], combi2=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
- combi1=[1, 0, 1], combi2=[0, 1, 0] could not be solved: 'Maximum_Iterations_Exceeded'
- combi1=[1, 0, 1], combi2=[1, 0, 1] is feasible. Testing for combi3:
-- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 0, 1] is feasible. Testing for combi4:
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[0, 0, 0] has cost 7.011 $.
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[1, 1, 1] has cost 7.803 $.
-- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[1, 1, 1] has cost 7.768 $.
- combi1=[1, 0, 1], combi2=[1, 1, 1] is feasible. Testing for combi3:
-- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 1, 0] is feasible. Testing for combi4:
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[1, 0, 1] has cost 8.217 $.
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[1, 1, 1] has cost 7.21 $.
-- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 0, 1] is feasible. Testing for combi4:
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[1, 1, 1] has cost 7.773 $.
-- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[0, 0, 0] has cost 6.732 $.
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[1, 0, 1] has cost 7.752 $.
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[1, 1, 1] has cost 7.787 $.

******* combi1=[1, 1, 1] *******
combi1 = [1, 1, 1] is feasible. Testing for combi2:
- combi1=[1, 1, 1], combi2=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
- combi1=[1, 1, 1], combi2=[0, 1, 0] could not be solved: 'Maximum_Iterations_Exceeded'
- combi1=[1, 1, 1], combi2=[1, 0, 1] could not be solved: 'Maximum_Iterations_Exceeded'
- combi1=[1, 1, 1], combi2=[1, 1, 1] is feasible. Testing for combi3:
-- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[1, 1, 1] has cost 7.405 $.
-- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 1, 0] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[0, 0, 0] could not be solved: 'Maximum_Iterations_Exceeded'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[1, 0, 1] has cost 8.182 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[1, 1, 1] has cost 7.21 $.
-- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[0, 0, 0] has cost 6.457 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[1, 0, 1] has cost 7.704 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[1, 1, 1] has cost 7.699 $.
-- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[0, 0, 0] has cost 6.143 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[1, 0, 1] has cost 7.707 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[1, 1, 1] has cost 7.373 $.
Minimum cost 6.14$ achieved for {'combi1': [1, 1, 1], 'combi2': [1, 1, 1], 'combi3': [1, 1, 1], 'combi4': [0, 0, 0]}
Data was appended to results_2023-12-21_10-17-20.csv
#########################################

-----------------------------------------------------
Iteration 5.0 (4h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h00-0h30: [1, 1, 1]
0h30-1h00: [1, 1, 1]
1h00-1h30: [1, 1, 1]
1h30-2h00: [0, 0, 0]

Solving the optimization problem...
Done in 18.9 seconds.

Initial state
B     -- 311.7 | S        309.3 --    310.0 --   311.0 --
         312.0 |          308.9       309.9      310.0
         312.2 |          308.5       309.8      310.0
      -- 312.5 |       -- 308.2    -- 309.6   -- 310.0

Next state
B -0.3-> 311.0 | S        309.3 <-    310.0 <-   311.0 <-0.0-
         311.0 |          308.9       309.9      310.0
         311.0 |          308.5       309.8      310.0
  <-0.3- 311.0 |   <-0.0- 308.2    <- 309.6   <- 310.0

Q_HP = [8000, 8000, 8000, 8000, 8000, 8000, 8055, 8160, 8264, 8368, 8471, 8573, 8670, 8762, 8846, 8922, 8989, 9046, 9095, 9137, 9171, 9199, 9222, 9240, 9254, 9266, 9275, 9282, 9287, 9292]
Resistive elements: [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5]

Cost of next 4 hours: 6.14 $
[18.0, 17.17, 16.19, 30.74]

#########################################
Buffer: [311.0000171710539, 311.0002710020165, 311.0018165628475, 311.00792159839216] 
Storage: [310.72807683281695, 310.3431898803814, 310.1039438800861, 310.0148480758036, 309.97982114215193, 309.93109369049057, 309.82254090231436, 309.6124041487975, 309.28226011938693, 308.8721886601734, 308.48142430199226, 308.2054239772453]
Electricity forecasts: [17.17, 16.19, 30.74, 31.17]

Searching for optimal sequence...

******* combi1=[0, 0, 0] *******
combi1 = [0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'

******* combi1=[0, 1, 0] *******
combi1 = [0, 1, 0] could not be solved: 'Maximum_Iterations_Exceeded'

******* combi1=[1, 0, 1] *******
combi1 = [1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'

******* combi1=[1, 1, 1] *******
combi1 = [1, 1, 1] is feasible. Testing for combi2:
- combi1=[1, 1, 1], combi2=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
- combi1=[1, 1, 1], combi2=[0, 1, 0] could not be solved: 'Maximum_Iterations_Exceeded'
- combi1=[1, 1, 1], combi2=[1, 0, 1] is feasible. Testing for combi3:
-- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[1, 1, 1] has cost 8.878 $.
- combi1=[1, 1, 1], combi2=[1, 1, 1] is feasible. Testing for combi3:
-- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[1, 1, 1] has cost 7.3 $.
-- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 1, 0] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[0, 0, 0] could not be solved: 'Maximum_Iterations_Exceeded'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[1, 1, 1] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[1, 0, 1] has cost 8.856 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[1, 1, 1] has cost 8.891 $.
-- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[0, 0, 0] has cost 7.357 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[1, 0, 1] has cost 8.85 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[1, 1, 1] has cost 8.507 $.
Minimum cost 7.3$ achieved for {'combi1': [1, 1, 1], 'combi2': [1, 1, 1], 'combi3': [0, 0, 0], 'combi4': [1, 1, 1]}
Data was appended to results_2023-12-21_10-17-20.csv
#########################################

-----------------------------------------------------
Iteration 6.0 (5h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h00-0h30: [1, 1, 1]
0h30-1h00: [1, 1, 1]
1h00-1h30: [0, 0, 0]
1h30-2h00: [1, 1, 1]

Solving the optimization problem...
Done in 82.8 seconds.

Initial state
B     -- 311.0 | S        309.3 --    310.0 --   311.0 --
         311.0 |          308.9       309.9      310.0
         311.0 |          308.5       309.8      310.0
      -- 311.0 |       -- 308.2    -- 309.6   -- 310.0

Next state
B -0.3-> 321.4 | S        309.3 <-    310.0 <-   311.0 <-0.0-
         320.5 |          308.9       309.9      310.0
         319.5 |          308.5       309.8      310.0
  <-0.3- 318.6 |   <-0.0- 308.2    <- 309.6   <- 310.0

Q_HP = [14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000]
Resistive elements: [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5]

Cost of next 4 hours: 7.3 $
[17.17, 16.19, 30.74, 31.17]

#########################################
Buffer: [321.40240438284127, 320.46768695627617, 319.5334606503525, 318.5991830411751] 
Storage: [310.7280745903274, 310.34318975850704, 310.10394380432854, 310.01484804759144, 309.9798211310605, 309.931093675061, 309.82254086794114, 309.61240408225757, 309.2822600148467, 308.87218853032425, 308.48142417825665, 308.2054238898497]
Electricity forecasts: [16.19, 30.74, 31.17, 16.18]

Searching for optimal sequence...

******* combi1=[0, 0, 0] *******
combi1 = [0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'

******* combi1=[0, 1, 0] *******
combi1 = [0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'

******* combi1=[1, 0, 1] *******
combi1 = [1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'

******* combi1=[1, 1, 1] *******
combi1 = [1, 1, 1] is feasible. Testing for combi2:
- combi1=[1, 1, 1], combi2=[0, 0, 0] is feasible. Testing for combi3:
-- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[1, 1, 1], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[1, 1, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[1, 1, 1], combi4=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[1, 1, 1], combi4=[1, 1, 1] has cost 6.382 $.
- combi1=[1, 1, 1], combi2=[0, 1, 0] is feasible. Testing for combi3:
-- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[0, 0, 0] could not be solved: 'Maximum_Iterations_Exceeded'
-- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 0, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 0, 1], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 0, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 0, 1], combi4=[1, 0, 1] has cost 7.285 $.
--- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 0, 1], combi4=[1, 1, 1] has cost 7.261 $.
-- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 1, 1], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 1, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 1, 1], combi4=[1, 0, 1] has cost 6.728 $.
--- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 1, 1], combi4=[1, 1, 1] has cost 6.201 $.
- combi1=[1, 1, 1], combi2=[1, 0, 1] is feasible. Testing for combi3:
-- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[0, 0, 0] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[0, 0, 0], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[0, 0, 0], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[0, 0, 0], combi4=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[0, 0, 0], combi4=[1, 1, 1] has cost 7.005 $.
-- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[0, 1, 0] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[0, 1, 0], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[0, 1, 0], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[0, 1, 0], combi4=[1, 0, 1] has cost 6.78 $.
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[0, 1, 0], combi4=[1, 1, 1] has cost 6.2 $.
-- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 0, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[0, 0, 0] has cost 9.356 $.
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[1, 1, 1] has cost 8.195 $.
-- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[0, 0, 0] has cost 8.316 $.
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[1, 0, 1] has cost 8.105 $.
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[1, 1, 1] has cost 8.074 $.
- combi1=[1, 1, 1], combi2=[1, 1, 1] is feasible. Testing for combi3:
-- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[1, 1, 1] has cost 6.409 $.
-- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[0, 0, 0] has cost 8.355 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[1, 0, 1] has cost 7.973 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[1, 1, 1] has cost 7.996 $.
-- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[0, 0, 0] has cost 7.85 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[1, 0, 1] has cost 7.964 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[1, 1, 1] has cost 7.797 $.
Minimum cost 6.2$ achieved for {'combi1': [1, 1, 1], 'combi2': [1, 0, 1], 'combi3': [0, 1, 0], 'combi4': [1, 1, 1]}
Data was appended to results_2023-12-21_10-17-20.csv
#########################################

-----------------------------------------------------
Iteration 7.0 (6h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h00-0h30: [1, 1, 1]
0h30-1h00: [1, 0, 1]
1h00-1h30: [0, 1, 0]
1h30-2h00: [1, 1, 1]

Solving the optimization problem...
Done in 48.6 seconds.

Initial state
B     -- 321.4 | S        309.3 --    310.0 --   311.0 --
         320.5 |          308.9       309.9      310.0
         319.5 |          308.5       309.8      310.0
      -- 318.6 |       -- 308.2    -- 309.6   -- 310.0

Next state
B -0.0-> 317.3 | S        312.4 <-    313.4 <-   315.0 <-0.3-
         319.5 |          311.8       313.3      314.0
         320.0 |          311.2       313.2      314.0
  <-0.0- 319.5 |   <-0.3- 310.7    <- 312.9   <- 313.0

Q_HP = [14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000]
Resistive elements: [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5]

Cost of next 4 hours: 6.2 $
[16.19, 30.74, 31.17, 16.18]

#########################################
Buffer: [317.25691375048916, 319.4574022413441, 319.968519042051, 319.4602134402193] 
Storage: [314.74628487658947, 314.183162580777, 313.74108800981065, 313.4919499857486, 313.38693887320215, 313.32827966513236, 313.20107146750655, 312.9105955357213, 312.43495846987076, 311.8408290297294, 311.24010555647214, 310.72490402416184]
Electricity forecasts: [30.74, 31.17, 16.18, 17.11]

Searching for optimal sequence...

******* combi1=[0, 0, 0] *******
combi1 = [0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'

******* combi1=[0, 1, 0] *******
combi1 = [0, 1, 0] is feasible. Testing for combi2:
- combi1=[0, 1, 0], combi2=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
- combi1=[0, 1, 0], combi2=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
- combi1=[0, 1, 0], combi2=[1, 0, 1] is feasible. Testing for combi3:
-- combi1=[0, 1, 0], combi2=[1, 0, 1], combi3=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[0, 1, 0], combi2=[1, 0, 1], combi3=[0, 1, 0] could not be solved: 'Maximum_Iterations_Exceeded'
-- combi1=[0, 1, 0], combi2=[1, 0, 1], combi3=[1, 0, 1] is feasible. Testing for combi4:
--- combi1=[0, 1, 0], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[0, 1, 0], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[0, 1, 0], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[0, 1, 0], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[1, 1, 1] has cost 6.671 $.
-- combi1=[0, 1, 0], combi2=[1, 0, 1], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[0, 1, 0], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[0, 1, 0], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[0, 1, 0], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[1, 0, 1] has cost 6.646 $.
--- combi1=[0, 1, 0], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[1, 1, 1] has cost 6.609 $.
- combi1=[0, 1, 0], combi2=[1, 1, 1] is feasible. Testing for combi3:
-- combi1=[0, 1, 0], combi2=[1, 1, 1], combi3=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[0, 1, 0], combi2=[1, 1, 1], combi3=[0, 1, 0] could not be solved: 'Maximum_Iterations_Exceeded'
-- combi1=[0, 1, 0], combi2=[1, 1, 1], combi3=[1, 0, 1] is feasible. Testing for combi4:
--- combi1=[0, 1, 0], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[0, 1, 0], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[0, 1, 0], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[1, 0, 1] has cost 6.11 $.
--- combi1=[0, 1, 0], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[1, 1, 1] has cost 6.11 $.
-- combi1=[0, 1, 0], combi2=[1, 1, 1], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[0, 1, 0], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[0, 0, 0] has cost 5.989 $.
--- combi1=[0, 1, 0], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[0, 1, 0], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[1, 0, 1] has cost 6.059 $.
--- combi1=[0, 1, 0], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[1, 1, 1] has cost 5.54 $.

******* combi1=[1, 0, 1] *******
combi1 = [1, 0, 1] is feasible. Testing for combi2:
- combi1=[1, 0, 1], combi2=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
- combi1=[1, 0, 1], combi2=[0, 1, 0] is feasible. Testing for combi3:
-- combi1=[1, 0, 1], combi2=[0, 1, 0], combi3=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[1, 0, 1], combi2=[0, 1, 0], combi3=[0, 1, 0] could not be solved: 'Maximum_Iterations_Exceeded'
-- combi1=[1, 0, 1], combi2=[0, 1, 0], combi3=[1, 0, 1] is feasible. Testing for combi4:
--- combi1=[1, 0, 1], combi2=[0, 1, 0], combi3=[1, 0, 1], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[0, 1, 0], combi3=[1, 0, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[0, 1, 0], combi3=[1, 0, 1], combi4=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[0, 1, 0], combi3=[1, 0, 1], combi4=[1, 1, 1] has cost 6.054 $.
-- combi1=[1, 0, 1], combi2=[0, 1, 0], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[1, 0, 1], combi2=[0, 1, 0], combi3=[1, 1, 1], combi4=[0, 0, 0] has cost 6.195 $.
--- combi1=[1, 0, 1], combi2=[0, 1, 0], combi3=[1, 1, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[0, 1, 0], combi3=[1, 1, 1], combi4=[1, 0, 1] has cost 6.058 $.
--- combi1=[1, 0, 1], combi2=[0, 1, 0], combi3=[1, 1, 1], combi4=[1, 1, 1] has cost 5.518 $.
- combi1=[1, 0, 1], combi2=[1, 0, 1] is feasible. Testing for combi3:
-- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[0, 0, 0] is feasible. Testing for combi4:
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[0, 0, 0], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[0, 0, 0], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[0, 0, 0], combi4=[1, 0, 1] has cost 8.952 $.
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[0, 0, 0], combi4=[1, 1, 1] has cost 8.901 $.
-- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[0, 1, 0] is feasible. Testing for combi4:
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[0, 1, 0], combi4=[0, 0, 0] could not be solved: 'Maximum_Iterations_Exceeded'
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[0, 1, 0], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[0, 1, 0], combi4=[1, 0, 1] has cost 7.521 $.
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[0, 1, 0], combi4=[1, 1, 1] has cost 6.899 $.
-- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 0, 1] is feasible. Testing for combi4:
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[0, 0, 0] has cost 8.312 $.
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[1, 0, 1] has cost 7.785 $.
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[1, 1, 1] has cost 7.637 $.
-- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[0, 0, 0] has cost 7.163 $.
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[0, 1, 0] has cost 6.737 $.
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[1, 0, 1] could not be solved: 'Maximum_Iterations_Exceeded'
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[1, 1, 1] has cost 7.616 $.
- combi1=[1, 0, 1], combi2=[1, 1, 1] is feasible. Testing for combi3:
-- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 0, 0] is feasible. Testing for combi4:
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[0, 1, 0] could not be solved: 'Maximum_Iterations_Exceeded'
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[1, 0, 1] has cost 8.506 $.
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[1, 1, 1] has cost 8.011 $.
-- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 1, 0] is feasible. Testing for combi4:
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[0, 0, 0] could not be solved: 'Maximum_Iterations_Exceeded'
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[0, 1, 0] has cost 8.269 $.
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[1, 0, 1] could not be solved: 'Restoration_Failed'
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[1, 1, 1] has cost 6.905 $.
-- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 0, 1] is feasible. Testing for combi4:
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[0, 0, 0] has cost 8.132 $.
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[1, 0, 1] has cost 7.616 $.
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[1, 1, 1] has cost 7.616 $.
-- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[0, 0, 0] has cost 7.781 $.
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[1, 0, 1] has cost 7.616 $.
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[1, 1, 1] has cost 7.616 $.

******* combi1=[1, 1, 1] *******
combi1 = [1, 1, 1] is feasible. Testing for combi2:
- combi1=[1, 1, 1], combi2=[0, 0, 0] is feasible. Testing for combi3:
-- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[1, 1, 1], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[1, 1, 1], combi4=[0, 1, 0] has cost 6.242 $.
--- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[1, 1, 1], combi4=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[1, 1, 1], combi4=[1, 1, 1] has cost 6.775 $.
- combi1=[1, 1, 1], combi2=[0, 1, 0] is feasible. Testing for combi3:
-- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[0, 1, 0] could not be solved: 'Maximum_Iterations_Exceeded'
-- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 0, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 0, 1], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 0, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 0, 1], combi4=[1, 0, 1] has cost 6.193 $.
--- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 0, 1], combi4=[1, 1, 1] has cost 6.052 $.
-- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 1, 1], combi4=[0, 0, 0] has cost 6.048 $.
--- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 1, 1], combi4=[0, 1, 0] could not be solved: 'Maximum_Iterations_Exceeded'
--- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 1, 1], combi4=[1, 0, 1] has cost 6.09 $.
--- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 1, 1], combi4=[1, 1, 1] has cost 5.511 $.
- combi1=[1, 1, 1], combi2=[1, 0, 1] is feasible. Testing for combi3:
-- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[0, 0, 0] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[0, 0, 0], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[0, 0, 0], combi4=[0, 1, 0] has cost 8.621 $.
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[0, 0, 0], combi4=[1, 0, 1] has cost 8.909 $.
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[0, 0, 0], combi4=[1, 1, 1] has cost 8.013 $.
-- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[0, 1, 0] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[0, 1, 0], combi4=[0, 0, 0] could not be solved: 'Maximum_Iterations_Exceeded'
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[0, 1, 0], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[0, 1, 0], combi4=[1, 0, 1] has cost 7.526 $.
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[0, 1, 0], combi4=[1, 1, 1] has cost 6.903 $.
-- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 0, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[0, 0, 0] has cost 8.531 $.
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[0, 1, 0] has cost 6.709 $.
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[1, 0, 1] has cost 7.616 $.
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[1, 1, 1] has cost 7.616 $.
-- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[0, 0, 0] has cost 7.323 $.
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[1, 0, 1] has cost 7.616 $.
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[1, 1, 1] has cost 7.616 $.
- combi1=[1, 1, 1], combi2=[1, 1, 1] is feasible. Testing for combi3:
-- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[0, 1, 0] has cost 8.328 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[1, 0, 1] has cost 8.486 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[1, 1, 1] has cost 8.005 $.
-- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 1, 0] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[0, 0, 0] has cost 8.233 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[0, 1, 0] has cost 8.259 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[1, 0, 1] has cost 7.559 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[1, 1, 1] has cost 6.906 $.
-- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[0, 0, 0] has cost 8.434 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[1, 0, 1] has cost 7.616 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[1, 1, 1] has cost 7.616 $.
-- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[0, 0, 0] has cost 7.285 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[1, 0, 1] has cost 7.616 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[1, 1, 1] has cost 7.616 $.
Minimum cost 5.51$ achieved for {'combi1': [1, 1, 1], 'combi2': [0, 1, 0], 'combi3': [1, 1, 1], 'combi4': [1, 1, 1]}
Data was appended to results_2023-12-21_10-17-20.csv
#########################################

-----------------------------------------------------
Iteration 8.0 (7h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h00-0h30: [1, 1, 1]
0h30-1h00: [0, 1, 0]
1h00-1h30: [1, 1, 1]
1h30-2h00: [1, 1, 1]

Solving the optimization problem...
Done in 21.7 seconds.

Initial state
B     -- 317.3 | S        312.4 --    313.4 --   315.0 --
         319.5 |          311.8       313.3      314.0
         320.0 |          311.2       313.2      314.0
      -- 319.5 |       -- 310.7    -- 312.9   -- 313.0

Next state
B -0.0-> 316.1 | S        313.2 <-    311.8 <-   312.0 <-0.3-
         318.0 |          313.5       311.9      312.0
         318.9 |          313.6       312.3      312.0
  <-0.0- 319.4 |   <-0.3- 313.6    <- 312.7   <- 312.0

Q_HP = [14000, 9971, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000]
Resistive elements: [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5]

Cost of next 4 hours: 5.51 $
[30.74, 31.17, 16.18, 17.11]

#########################################
Buffer: [316.11218929536375, 317.99054776170124, 318.88965507250924, 319.4148870631756] 
Storage: [312.4227912684252, 312.2323672170897, 312.01812869907525, 311.8379324625724, 311.7768618469059, 311.9116713735016, 312.2520221633336, 312.71445294374985, 313.1611868182521, 313.4749681451466, 313.6102412737998, 313.5891559562019]
Electricity forecasts: [31.17, 16.18, 17.11, 20.24]

Searching for optimal sequence...

******* combi1=[0, 0, 0] *******
combi1 = [0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'

******* combi1=[0, 1, 0] *******
combi1 = [0, 1, 0] is feasible. Testing for combi2:
- combi1=[0, 1, 0], combi2=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
- combi1=[0, 1, 0], combi2=[0, 1, 0] could not be solved: 'Maximum_Iterations_Exceeded'
- combi1=[0, 1, 0], combi2=[1, 0, 1] is feasible. Testing for combi3:
-- combi1=[0, 1, 0], combi2=[1, 0, 1], combi3=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[0, 1, 0], combi2=[1, 0, 1], combi3=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[0, 1, 0], combi2=[1, 0, 1], combi3=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[0, 1, 0], combi2=[1, 0, 1], combi3=[1, 1, 1] could not be solved: 'Infeasible_Problem_Detected'
- combi1=[0, 1, 0], combi2=[1, 1, 1] is feasible. Testing for combi3:
-- combi1=[0, 1, 0], combi2=[1, 1, 1], combi3=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[0, 1, 0], combi2=[1, 1, 1], combi3=[0, 1, 0] could not be solved: 'Maximum_Iterations_Exceeded'
-- combi1=[0, 1, 0], combi2=[1, 1, 1], combi3=[1, 0, 1] is feasible. Testing for combi4:
--- combi1=[0, 1, 0], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[0, 1, 0], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[0, 1, 0], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[0, 1, 0], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[1, 1, 1] has cost 5.458 $.
-- combi1=[0, 1, 0], combi2=[1, 1, 1], combi3=[1, 1, 1] could not be solved: 'Infeasible_Problem_Detected'

******* combi1=[1, 0, 1] *******
combi1 = [1, 0, 1] is feasible. Testing for combi2:
- combi1=[1, 0, 1], combi2=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
- combi1=[1, 0, 1], combi2=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
- combi1=[1, 0, 1], combi2=[1, 0, 1] is feasible. Testing for combi3:
-- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 0, 1] is feasible. Testing for combi4:
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[1, 1, 1] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[0, 0, 0] has cost 6.212 $.
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[1, 0, 1] has cost 6.825 $.
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[1, 1, 1] has cost 6.776 $.
- combi1=[1, 0, 1], combi2=[1, 1, 1] is feasible. Testing for combi3:
-- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 0, 0] is feasible. Testing for combi4:
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[0, 1, 0] could not be solved: 'Maximum_Iterations_Exceeded'
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[1, 0, 1] has cost 7.243 $.
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[1, 1, 1] has cost 7.243 $.
-- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 1, 0] is feasible. Testing for combi4:
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[0, 1, 0] has cost 6.553 $.
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[1, 1, 1] has cost 5.962 $.
-- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 0, 1] is feasible. Testing for combi4:
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[0, 0, 0] has cost 6.159 $.
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[1, 0, 1] has cost 6.81 $.
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[1, 1, 1] has cost 6.776 $.
-- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[0, 0, 0] has cost 6.235 $.
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[1, 1, 1] has cost 6.776 $.

******* combi1=[1, 1, 1] *******
combi1 = [1, 1, 1] is feasible. Testing for combi2:
- combi1=[1, 1, 1], combi2=[0, 0, 0] is feasible. Testing for combi3:
-- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[1, 0, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[1, 0, 1], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[1, 0, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[1, 0, 1], combi4=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[1, 0, 1], combi4=[1, 1, 1] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[1, 1, 1], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[1, 1, 1], combi4=[0, 1, 0] has cost 6.747 $.
--- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[1, 1, 1], combi4=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[1, 1, 1], combi4=[1, 1, 1] has cost 7.416 $.
- combi1=[1, 1, 1], combi2=[0, 1, 0] is feasible. Testing for combi3:
-- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[0, 0, 0] could not be solved: 'Maximum_Iterations_Exceeded'
-- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[0, 1, 0] could not be solved: 'Maximum_Iterations_Exceeded'
-- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 0, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 0, 1], combi4=[0, 0, 0] could not be solved: 'Maximum_Iterations_Exceeded'
--- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 0, 1], combi4=[0, 1, 0] has cost 6.738 $.
--- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 0, 1], combi4=[1, 0, 1] could not be solved: 'Maximum_Iterations_Exceeded'
--- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 0, 1], combi4=[1, 1, 1] has cost 6.799 $.
-- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 1, 1], combi4=[0, 0, 0] has cost 6.569 $.
--- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 1, 1], combi4=[0, 1, 0] has cost 6.699 $.
--- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 1, 1], combi4=[1, 0, 1] has cost 6.914 $.
--- combi1=[1, 1, 1], combi2=[0, 1, 0], combi3=[1, 1, 1], combi4=[1, 1, 1] has cost 6.221 $.
- combi1=[1, 1, 1], combi2=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
- combi1=[1, 1, 1], combi2=[1, 1, 1] is feasible. Testing for combi3:
-- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[1, 1, 1] has cost 6.54 $.
-- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 1, 0] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[0, 0, 0] has cost 6.603 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[0, 1, 0] has cost 6.545 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[1, 0, 1] has cost 6.622 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[1, 1, 1] has cost 5.916 $.
-- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[0, 0, 0] has cost 6.18 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[1, 0, 1] has cost 6.776 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[1, 1, 1] has cost 6.776 $.
-- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[0, 0, 0] has cost 6.266 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[0, 1, 0] has cost 5.788 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[1, 0, 1] has cost 6.776 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[1, 1, 1] has cost 6.776 $.
Minimum cost 5.46$ achieved for {'combi1': [0, 1, 0], 'combi2': [1, 1, 1], 'combi3': [1, 0, 1], 'combi4': [1, 1, 1]}
Data was appended to results_2023-12-21_10-17-20.csv
#########################################

-----------------------------------------------------
Iteration 9.0 (8h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h00-0h30: [0, 1, 0]
0h30-1h00: [1, 1, 1]
1h00-1h30: [1, 0, 1]
1h30-2h00: [1, 1, 1]

Solving the optimization problem...
Done in 37.7 seconds.

Initial state
B     -- 316.1 | S        313.2 --    311.8 --   312.0 --
         318.0 |          313.5       311.9      312.0
         318.9 |          313.6       312.3      312.0
      -- 319.4 |       -- 313.6    -- 312.7   -- 312.0

Next state
B -0.2-> 311.7 | S        308.0 ->    308.2 ->   311.0 -0.4->
         312.3 |          308.0       308.1      310.0
         312.7 |          308.1       308.0      309.0
  <-0.2- 313.1 |   -0.4-> 308.0    -> 308.0   -> 309.0

Q_HP = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
Resistive elements: [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5]

Cost of next 4 hours: 5.46 $
[31.17, 16.18, 17.11, 20.24]

#########################################
Buffer: [311.6740413155249, 312.3116468226281, 312.6506114568314, 313.0873028482347] 
Storage: [310.5570825308102, 309.7539474458752, 309.0603240771991, 308.55549847752843, 308.2474747274821, 308.0916382827913, 308.02738099119574, 308.0063305564713, 308.0010594361162, 308.0001118259835, 308.05753529920884, 307.99999692076796]
Electricity forecasts: [16.18, 17.11, 20.24, 24.94]

Searching for optimal sequence...

******* combi1=[0, 0, 0] *******
combi1 = [0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'

******* combi1=[0, 1, 0] *******
combi1 = [0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'

******* combi1=[1, 0, 1] *******
combi1 = [1, 0, 1] is feasible. Testing for combi2:
- combi1=[1, 0, 1], combi2=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
- combi1=[1, 0, 1], combi2=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
- combi1=[1, 0, 1], combi2=[1, 0, 1] is feasible. Testing for combi3:
-- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 0, 1] is feasible. Testing for combi4:
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[1, 0, 1] has cost 7.719 $.
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[1, 1, 1] has cost 7.686 $.
-- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[0, 1, 0] has cost 6.599 $.
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[1, 0, 1] has cost 7.648 $.
--- combi1=[1, 0, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[1, 1, 1] has cost 7.678 $.
- combi1=[1, 0, 1], combi2=[1, 1, 1] is feasible. Testing for combi3:
-- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 1, 0] is feasible. Testing for combi4:
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[0, 0, 0] could not be solved: 'Maximum_Iterations_Exceeded'
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[1, 0, 1] has cost 7.67 $.
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[1, 1, 1] has cost 6.831 $.
-- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 0, 1] is feasible. Testing for combi4:
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[1, 0, 1] has cost 7.652 $.
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[1, 1, 1] has cost 7.673 $.
-- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[0, 0, 0] has cost 6.931 $.
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[1, 0, 1] has cost 7.648 $.
--- combi1=[1, 0, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[1, 1, 1] has cost 7.594 $.

******* combi1=[1, 1, 1] *******
combi1 = [1, 1, 1] is feasible. Testing for combi2:
- combi1=[1, 1, 1], combi2=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
- combi1=[1, 1, 1], combi2=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
- combi1=[1, 1, 1], combi2=[1, 0, 1] is feasible. Testing for combi3:
-- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
-- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[0, 1, 0] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[0, 1, 0], combi4=[0, 0, 0] could not be solved: 'Maximum_Iterations_Exceeded'
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[0, 1, 0], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[0, 1, 0], combi4=[1, 0, 1] has cost 7.676 $.
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[0, 1, 0], combi4=[1, 1, 1] could not be solved: 'Maximum_Iterations_Exceeded'
-- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 0, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[1, 0, 1] has cost 7.667 $.
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 0, 1], combi4=[1, 1, 1] has cost 7.675 $.
-- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[0, 0, 0] has cost 7.041 $.
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[0, 1, 0] has cost 6.527 $.
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[1, 0, 1] could not be solved: 'Maximum_Iterations_Exceeded'
--- combi1=[1, 1, 1], combi2=[1, 0, 1], combi3=[1, 1, 1], combi4=[1, 1, 1] has cost 7.671 $.
- combi1=[1, 1, 1], combi2=[1, 1, 1] is feasible. Testing for combi3:
-- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[1, 1, 1] has cost 6.682 $.
-- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 1, 0] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[0, 0, 0] could not be solved: 'Maximum_Iterations_Exceeded'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 1, 0], combi4=[1, 1, 1] has cost 6.82 $.
-- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[0, 0, 0] has cost 6.995 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[1, 0, 1] has cost 7.649 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 0, 1], combi4=[1, 1, 1] has cost 7.672 $.
-- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[0, 0, 0] has cost 6.326 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[0, 1, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[1, 0, 1] has cost 7.648 $.
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[1, 1, 1] has cost 7.024 $.
Minimum cost 6.33$ achieved for {'combi1': [1, 1, 1], 'combi2': [1, 1, 1], 'combi3': [1, 1, 1], 'combi4': [0, 0, 0]}
Data was appended to results_2023-12-21_10-17-20.csv
#########################################

-----------------------------------------------------
Iteration 10.0 (9h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h00-0h30: [1, 1, 1]
0h30-1h00: [1, 1, 1]
1h00-1h30: [1, 1, 1]
1h30-2h00: [0, 0, 0]

Solving the optimization problem...
Done in 105.4 seconds.

Initial state
B     -- 311.7 | S        308.0 --    308.2 --   311.0 --
         312.3 |          308.0       308.1      310.0
         312.7 |          308.1       308.0      309.0
      -- 313.1 |       -- 308.0    -- 308.0   -- 309.0

Next state
B -0.3-> 322.8 | S        308.0 <-    308.2 <-   311.0 <-0.0-
         321.9 |          308.0       308.1      310.0
         321.0 |          308.1       308.0      309.0
  <-0.3- 320.0 |   <-0.0- 308.0    <- 308.0   <- 309.0

Q_HP = [14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000, 14000]
Resistive elements: [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5]

Cost of next 4 hours: 6.33 $
[16.18, 17.11, 20.24, 24.94]

Plotting the data...
2023-12-22 02:21:29.025 python[1048:30693] ASB: LNW <NSApplication: 0x7fae23e0fc20> <Window: 0x7fae270de260> <NSThemeFrame: 0x7fae270dcc80> (null)
2023-12-22 02:21:40.153 python[1048:30693] ASB: LNW <NSApplication: 0x7fae23e0fc20> <NSSavePanel: 0x7fae27052530> <NSThemeFrame: 0x7fae270437e0> <_NSViewBackingLayer: 0x7fae270057b0>

