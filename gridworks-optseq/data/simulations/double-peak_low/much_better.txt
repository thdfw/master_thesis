(ada) thomasdefauw@Macbook-pro-2011 gridworks % python master.py

Problem type: Non-linear
Variables: Continuous (relaxed or fixed binary)
Solver: Ipopt

Time step: 4 minutes
Horizon: 8.0 hours (120 time steps)
Simulation: 24 hours (24 iterations)

Results file (enter to skip): 
Previous sequence:
 {'combi1': [1, 1, 1], 'combi2': [1, 1, 1], 'combi3': [1, 1, 1], 'combi4': [1, 1, 1], 'combi5': [1, 1, 1], 'combi6': [1, 1, 1], 'combi7': [1, 1, 1], 'combi8': [1, 1, 1]}
Current sequence before comparison:
 {'combi1': [0, 0, 0], 'combi2': [1, 1, 1], 'combi3': [1, 1, 1], 'combi4': [1, 1, 1], 'combi5': [1, 1, 1], 'combi6': [1, 1, 1], 'combi7': [1, 1, 1], 'combi8': [0, 0, 0]}

-----------------------------------------------------
Iteration 1.0 (0h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [1, 1, 1]
4h-5h: [1, 1, 1]
5h-6h: [1, 1, 1]
6h-7h: [1, 1, 1]
7h-8h: [0, 0, 0]

Solving the optimization problem...

******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

Failed to solve: 'Infeasible_Problem_Detected'!

-----------------------------------------------------
Iteration 1.0 (0h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 1, 0]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [1, 1, 1]
4h-5h: [1, 1, 1]
5h-6h: [1, 1, 1]
6h-7h: [1, 1, 1]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Failed to solve: 'Infeasible_Problem_Detected'!

-----------------------------------------------------
Iteration 1.0 (0h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [1, 1, 1]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [1, 1, 1]
4h-5h: [1, 1, 1]
5h-6h: [1, 1, 1]
6h-7h: [1, 1, 1]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Done in 57.7 seconds.

Initial state
B     -- 314.0 | S        310.0 --    310.0 --   310.0 --
         314.6 |          310.0       310.0      310.0
         313.7 |          310.0       310.0      310.0
      -- 308.8 |       -- 310.0    -- 310.0   -- 310.0

Next state
B -0.2-> 314.9 | S        311.9 <-    314.2 <-   315.0 <-0.3-
         314.6 |          311.1       313.9      315.0
         314.4 |          310.5       313.4      315.0
  <-0.2- 314.2 |   <-0.3- 310.2    <- 312.7   <- 314.0

Q_HP = [8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000]
m_HP = 0.5, m_load = 0.05
Cost of next 8 hours: 0.95 $
[6.36, 6.34, 6.34, 6.37, 6.41, 6.46, 6.95, 41.51]
Previous sequence:
 {'combi1': [1, 1, 1], 'combi2': [1, 1, 1], 'combi3': [1, 1, 1], 'combi4': [1, 1, 1], 'combi5': [1, 1, 1], 'combi6': [1, 1, 1], 'combi7': [1, 1, 1], 'combi8': [0, 0, 0]}
Current sequence before comparison:
 {'combi1': [0, 0, 0], 'combi2': [1, 1, 1], 'combi3': [1, 1, 1], 'combi4': [1, 1, 1], 'combi5': [1, 1, 1], 'combi6': [1, 1, 1], 'combi7': [0, 0, 0], 'combi8': [0, 0, 0]}

-----------------------------------------------------
Iteration 2.0 (1h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [1, 1, 1]
4h-5h: [1, 1, 1]
5h-6h: [1, 1, 1]
6h-7h: [0, 0, 0]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Failed to solve: 'Infeasible_Problem_Detected'!

-----------------------------------------------------
Iteration 2.0 (1h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 1, 0]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [1, 1, 1]
4h-5h: [1, 1, 1]
5h-6h: [1, 1, 1]
6h-7h: [0, 0, 0]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Done in 5.4 seconds.

Initial state
B     -- 314.9 | S        311.9 --    314.2 --   315.0 --
         314.6 |          311.1       313.9      315.0
         314.4 |          310.5       313.4      315.0
      -- 314.2 |       -- 310.2    -- 312.7   -- 314.0

Next state
B -0.3-> 311.6 | S        312.9 ->    312.9 ->   311.0 -0.3->
         312.1 |          312.8       313.0      312.0
         312.8 |          312.6       313.1      312.0
  <-0.3- 313.4 |   -0.3-> 312.4    -> 313.0   -> 313.0

Q_HP = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
m_HP = 0, m_load = 0.04
Cost of next 8 hours: 0.69 $
[6.34, 6.34, 6.37, 6.41, 6.46, 6.95, 41.51, 41.16]
Previous sequence:
 {'combi1': [0, 1, 0], 'combi2': [1, 1, 1], 'combi3': [1, 1, 1], 'combi4': [1, 1, 1], 'combi5': [1, 1, 1], 'combi6': [1, 1, 1], 'combi7': [0, 0, 0], 'combi8': [0, 0, 0]}
Current sequence before comparison:
 {'combi1': [0, 0, 0], 'combi2': [1, 1, 1], 'combi3': [1, 1, 1], 'combi4': [1, 1, 1], 'combi5': [1, 1, 1], 'combi6': [0, 0, 0], 'combi7': [0, 0, 0], 'combi8': [0, 0, 0]}

-----------------------------------------------------
Iteration 3.0 (2h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [1, 1, 1]
4h-5h: [1, 1, 1]
5h-6h: [0, 0, 0]
6h-7h: [0, 0, 0]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Failed to solve: 'Infeasible_Problem_Detected'!

-----------------------------------------------------
Iteration 3.0 (2h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 1, 0]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [1, 1, 1]
4h-5h: [1, 1, 1]
5h-6h: [0, 0, 0]
6h-7h: [0, 0, 0]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Done in 7.5 seconds.

Initial state
B     -- 311.6 | S        312.9 --    312.9 --   311.0 --
         312.1 |          312.8       313.0      312.0
         312.8 |          312.6       313.1      312.0
      -- 313.4 |       -- 312.4    -- 313.0   -- 313.0

Next state
B -0.3-> 312.5 | S        311.0 ->    310.9 ->   312.0 -0.3->
         312.7 |          311.2       310.8      312.0
         312.9 |          311.3       310.8      312.0
  <-0.3- 312.9 |   -0.3-> 311.3    -> 310.9   -> 311.0

Q_HP = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
m_HP = 0, m_load = 0.04
Cost of next 8 hours: 0.55 $
[6.34, 6.37, 6.41, 6.46, 6.95, 41.51, 41.16, 41.07]
Previous sequence:
 {'combi1': [0, 1, 0], 'combi2': [1, 1, 1], 'combi3': [1, 1, 1], 'combi4': [1, 1, 1], 'combi5': [1, 1, 1], 'combi6': [0, 0, 0], 'combi7': [0, 0, 0], 'combi8': [0, 0, 0]}
Current sequence before comparison:
 {'combi1': [0, 0, 0], 'combi2': [1, 1, 1], 'combi3': [1, 1, 1], 'combi4': [1, 1, 1], 'combi5': [0, 0, 0], 'combi6': [0, 0, 0], 'combi7': [0, 0, 0], 'combi8': [0, 0, 0]}

-----------------------------------------------------
Iteration 4.0 (3h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [1, 1, 1]
4h-5h: [0, 0, 0]
5h-6h: [0, 0, 0]
6h-7h: [0, 0, 0]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Failed to solve: 'Infeasible_Problem_Detected'!

-----------------------------------------------------
Iteration 4.0 (3h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 1, 0]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [1, 1, 1]
4h-5h: [0, 0, 0]
5h-6h: [0, 0, 0]
6h-7h: [0, 0, 0]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Done in 6.9 seconds.

Initial state
B     -- 312.5 | S        311.0 --    310.9 --   312.0 --
         312.7 |          311.2       310.8      312.0
         312.9 |          311.3       310.8      312.0
      -- 312.9 |       -- 311.3    -- 310.9   -- 311.0

Next state
B -0.1-> 311.2 | S        309.2 ->    310.8 ->   311.0 -0.2->
         311.5 |          309.0       310.5      311.0
         311.9 |          308.7       310.1      311.0
  <-0.1- 312.3 |   -0.2-> 309.6    -> 309.6   -> 311.0

Q_HP = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
m_HP = 0, m_load = 0.05
Cost of next 8 hours: 0.42 $
[6.37, 6.41, 6.46, 6.95, 41.51, 41.16, 41.07, 41.06]
Previous sequence:
 {'combi1': [0, 1, 0], 'combi2': [1, 1, 1], 'combi3': [1, 1, 1], 'combi4': [1, 1, 1], 'combi5': [0, 0, 0], 'combi6': [0, 0, 0], 'combi7': [0, 0, 0], 'combi8': [0, 0, 0]}
Current sequence before comparison:
 {'combi1': [0, 0, 0], 'combi2': [1, 1, 1], 'combi3': [1, 1, 1], 'combi4': [0, 0, 0], 'combi5': [0, 0, 0], 'combi6': [0, 0, 0], 'combi7': [0, 0, 0], 'combi8': [0, 0, 0]}

-----------------------------------------------------
Iteration 5.0 (4h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [0, 0, 0]
4h-5h: [0, 0, 0]
5h-6h: [0, 0, 0]
6h-7h: [0, 0, 0]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Failed to solve: 'Restoration_Failed'!

-----------------------------------------------------
Iteration 5.0 (4h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 1, 0]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [0, 0, 0]
4h-5h: [0, 0, 0]
5h-6h: [0, 0, 0]
6h-7h: [0, 0, 0]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Failed to solve: 'Infeasible_Problem_Detected'!

-----------------------------------------------------
Iteration 5.0 (4h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [1, 1, 1]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [0, 0, 0]
4h-5h: [0, 0, 0]
5h-6h: [0, 0, 0]
6h-7h: [0, 0, 0]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Failed to solve: 'Restoration_Failed'!

#########################################
Buffer: [311.16309905757134, 311.5202958727051, 311.919276926771, 312.27840005133925] 
Storage: [310.94963090585674, 310.9050908509673, 310.91930613480184, 310.9258670861524, 310.82833291068073, 310.546230218694, 310.09267475587166, 309.6024984817264, 309.229529974587, 308.98753872347766, 308.7264198925204, 309.6313687260708]
Electricity forecasts: [6.41, 6.46, 6.95, 41.51, 41.16, 41.07, 41.06, 41.08]

Searching for optimal sequence...

******* combi1=[1, 1, 1] *******
combi1 = [1, 1, 1] is feasible. Testing for combi2:
- combi1=[1, 1, 1], combi2=[1, 1, 1] is feasible. Testing for combi3:
-- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[0, 0, 0] is feasible. Testing for combi5:
---- combi1=[1, 1, 1], ..., combi5=[0, 0, 0] is feasible. Testing for combi6:
----- combi1=[1, 1, 1], ..., combi6=[0, 0, 0] is feasible. Testing for combi7:
------ combi1=[1, 1, 1], ..., combi7=[0, 0, 0] is feasible. Testing for combi8:
------- combi1=[1, 1, 1], ..., combi8=[0, 0, 0] could not be solved: 'Restoration_Failed'
------- combi1=[1, 1, 1], ..., combi8=[0, 1, 0] has cost 0.419
Minimum cost 0.42$ achieved for {'combi1': [1, 1, 1], 'combi2': [1, 1, 1], 'combi3': [1, 1, 1], 'combi4': [0, 0, 0], 'combi5': [0, 0, 0], 'combi6': [0, 0, 0], 'combi7': [0, 0, 0], 'combi8': [0, 1, 0]}
Data was appended to results_2024-01-21_20-58-37.csv
#########################################

-----------------------------------------------------
Iteration 5.0 (4h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [1, 1, 1]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [0, 0, 0]
4h-5h: [0, 0, 0]
5h-6h: [0, 0, 0]
6h-7h: [0, 0, 0]
7h-8h: [0, 1, 0]

Solving the optimization problem...
Done in 321.9 seconds.

Initial state
B     -- 311.2 | S        309.2 --    310.8 --   311.0 --
         311.5 |          309.0       310.5      311.0
         311.9 |          308.7       310.1      311.0
      -- 312.3 |       -- 309.6    -- 309.6   -- 311.0

Next state
B -0.2-> 315.1 | S        311.8 <-    313.4 <-   315.0 <-0.2-
         314.7 |          311.4       313.1      315.0
         314.2 |          311.1       312.7      314.0
  <-0.2- 313.7 |   <-0.2- 310.8    <- 312.3   <- 314.0

Q_HP = [8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000]
m_HP = 0.5, m_load = 0.05
Cost of next 8 hours: 0.42 $
[6.41, 6.46, 6.95, 41.51, 41.16, 41.07, 41.06, 41.08]
Previous sequence:
 {'combi1': [1, 1, 1], 'combi2': [1, 1, 1], 'combi3': [1, 1, 1], 'combi4': [0, 0, 0], 'combi5': [0, 0, 0], 'combi6': [0, 0, 0], 'combi7': [0, 0, 0], 'combi8': [0, 1, 0]}
Current sequence before comparison:
 {'combi1': [1, 1, 1], 'combi2': [1, 1, 1], 'combi3': [0, 0, 0], 'combi4': [0, 0, 0], 'combi5': [0, 0, 0], 'combi6': [0, 0, 0], 'combi7': [0, 0, 0], 'combi8': [1, 1, 1]}
Replaced [0,0,0] with [0,1,0] in combi7

-----------------------------------------------------
Iteration 6.0 (5h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [1, 1, 1]
1h-2h: [1, 1, 1]
2h-3h: [0, 0, 0]
3h-4h: [0, 0, 0]
4h-5h: [0, 0, 0]
5h-6h: [0, 0, 0]
6h-7h: [0, 1, 0]
7h-8h: [1, 1, 1]

Solving the optimization problem...
Done in 271.4 seconds.

Initial state
B     -- 315.1 | S        311.8 --    313.4 --   315.0 --
         314.7 |          311.4       313.1      315.0
         314.2 |          311.1       312.7      314.0
      -- 313.7 |       -- 310.8    -- 312.3   -- 314.0

Next state
B -0.2-> 317.7 | S        314.7 <-    316.6 <-   318.0 <-0.2-
         317.4 |          314.3       316.2      318.0
         317.1 |          313.9       315.7      317.0
  <-0.2- 316.9 |   <-0.2- 313.5    <- 315.2   <- 317.0

Q_HP = [8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000]
m_HP = 0.5, m_load = 0.04
Cost of next 8 hours: 0.43 $
[6.46, 6.95, 41.51, 41.16, 41.07, 41.06, 41.08, 7.16]
Previous sequence:
 {'combi1': [1, 1, 1], 'combi2': [1, 1, 1], 'combi3': [0, 0, 0], 'combi4': [0, 0, 0], 'combi5': [0, 0, 0], 'combi6': [0, 0, 0], 'combi7': [0, 1, 0], 'combi8': [1, 1, 1]}
Current sequence before comparison:
 {'combi1': [1, 1, 1], 'combi2': [0, 0, 0], 'combi3': [0, 0, 0], 'combi4': [0, 0, 0], 'combi5': [0, 0, 0], 'combi6': [0, 0, 0], 'combi7': [1, 1, 1], 'combi8': [1, 1, 1]}
Replaced [0,0,0] with [0,1,0] in combi6

-----------------------------------------------------
Iteration 7.0 (6h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [1, 1, 1]
1h-2h: [0, 0, 0]
2h-3h: [0, 0, 0]
3h-4h: [0, 0, 0]
4h-5h: [0, 0, 0]
5h-6h: [0, 1, 0]
6h-7h: [1, 1, 1]
7h-8h: [1, 1, 1]

Solving the optimization problem...
Done in 18.2 seconds.

Initial state
B     -- 317.7 | S        314.7 --    316.6 --   318.0 --
         317.4 |          314.3       316.2      318.0
         317.1 |          313.9       315.7      317.0
      -- 316.9 |       -- 313.5    -- 315.2   -- 317.0

Next state
B -0.3-> 323.1 | S        317.2 <-    318.4 <-   321.0 <-0.2-
         321.9 |          316.9       318.1      320.0
         321.3 |          316.6       317.8      319.0
  <-0.3- 320.9 |   <-0.2- 316.1    <- 317.5   <- 319.0

Q_HP = [8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000]
m_HP = 0.5, m_load = 0.04
Cost of next 8 hours: 0.45 $
[6.95, 41.51, 41.16, 41.07, 41.06, 41.08, 7.16, 7.18]
Previous sequence:
 {'combi1': [1, 1, 1], 'combi2': [0, 0, 0], 'combi3': [0, 0, 0], 'combi4': [0, 0, 0], 'combi5': [0, 0, 0], 'combi6': [0, 1, 0], 'combi7': [1, 1, 1], 'combi8': [1, 1, 1]}
Current sequence before comparison:
 {'combi1': [0, 0, 0], 'combi2': [0, 0, 0], 'combi3': [0, 0, 0], 'combi4': [0, 0, 0], 'combi5': [0, 0, 0], 'combi6': [1, 1, 1], 'combi7': [1, 1, 1], 'combi8': [1, 1, 1]}
Replaced [0,0,0] with [0,1,0] in combi5

-----------------------------------------------------
Iteration 8.0 (7h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [0, 0, 0]
2h-3h: [0, 0, 0]
3h-4h: [0, 0, 0]
4h-5h: [0, 1, 0]
5h-6h: [1, 1, 1]
6h-7h: [1, 1, 1]
7h-8h: [1, 1, 1]

Solving the optimization problem...
Done in 31.7 seconds.

Initial state
B     -- 323.1 | S        317.2 --    318.4 --   321.0 --
         321.9 |          316.9       318.1      320.0
         321.3 |          316.6       317.8      319.0
      -- 320.9 |       -- 316.1    -- 317.5   -- 319.0

Next state
B <-0.0- 322.2 | S        317.2 ->    318.3 ->   321.0 -0.0->
         321.1 |          316.9       318.0      320.0
         319.3 |          316.4       317.7      319.0
  -0.0-> 315.5 |   -0.0-> 315.5    -> 317.5   -> 319.0

Q_HP = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
m_HP = 0, m_load = 0.03
Cost of next 8 hours: 0.46 $
[41.51, 41.16, 41.07, 41.06, 41.08, 7.16, 7.18, 7.18]
Previous sequence:
 {'combi1': [0, 0, 0], 'combi2': [0, 0, 0], 'combi3': [0, 0, 0], 'combi4': [0, 0, 0], 'combi5': [0, 1, 0], 'combi6': [1, 1, 1], 'combi7': [1, 1, 1], 'combi8': [1, 1, 1]}
Current sequence before comparison:
 {'combi1': [0, 0, 0], 'combi2': [0, 0, 0], 'combi3': [0, 0, 0], 'combi4': [0, 0, 0], 'combi5': [1, 1, 1], 'combi6': [1, 1, 1], 'combi7': [1, 1, 1], 'combi8': [1, 1, 1]}
Replaced [0,0,0] with [0,1,0] in combi4

-----------------------------------------------------
Iteration 9.0 (8h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [0, 0, 0]
2h-3h: [0, 0, 0]
3h-4h: [0, 1, 0]
4h-5h: [1, 1, 1]
5h-6h: [1, 1, 1]
6h-7h: [1, 1, 1]
7h-8h: [1, 1, 1]

Solving the optimization problem...
Done in 24.7 seconds.

Initial state
B     -- 322.2 | S        317.2 --    318.3 --   321.0 --
         321.1 |          316.9       318.0      320.0
         319.3 |          316.4       317.7      319.0
      -- 315.5 |       -- 315.5    -- 317.5   -- 319.0

Next state
B <-0.0- 321.8 | S        317.1 ->    318.2 ->   321.0 -0.0->
         320.3 |          316.7       317.9      320.0
         317.9 |          316.0       317.7      319.0
  -0.0-> 314.0 |   -0.0-> 314.2    -> 317.4   -> 319.0

Q_HP = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
m_HP = 0, m_load = 0.02
Cost of next 8 hours: 0.61 $
[41.16, 41.07, 41.06, 41.08, 7.16, 7.18, 7.18, 7.16]
Previous sequence:
 {'combi1': [0, 0, 0], 'combi2': [0, 0, 0], 'combi3': [0, 0, 0], 'combi4': [0, 1, 0], 'combi5': [1, 1, 1], 'combi6': [1, 1, 1], 'combi7': [1, 1, 1], 'combi8': [1, 1, 1]}
Current sequence before comparison:
 {'combi1': [0, 0, 0], 'combi2': [0, 0, 0], 'combi3': [0, 0, 0], 'combi4': [1, 1, 1], 'combi5': [1, 1, 1], 'combi6': [1, 1, 1], 'combi7': [1, 1, 1], 'combi8': [0, 0, 0]}
Replaced [0,0,0] with [0,1,0] in combi3

-----------------------------------------------------
Iteration 10.0 (9h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [0, 0, 0]
2h-3h: [0, 1, 0]
3h-4h: [1, 1, 1]
4h-5h: [1, 1, 1]
5h-6h: [1, 1, 1]
6h-7h: [1, 1, 1]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Failed to solve: 'Maximum_Iterations_Exceeded'!

#########################################
Buffer: [321.78207015369617, 320.3345066426563, 317.8935466656969, 313.9928155670948] 
Storage: [320.95316291383597, 319.94604268715455, 319.20764530068266, 318.6562422451761, 318.2477241356151, 317.92833132759773, 317.6520071381918, 317.3806546253018, 317.0823446094058, 316.70807926610564, 316.0361461463069, 314.20107963055796]
Electricity forecasts: [41.07, 41.06, 41.08, 7.16, 7.18, 7.18, 7.16, 41.2]

Searching for optimal sequence...

******* combi1=[0, 0, 0] *******
combi1 = [0, 0, 0] is feasible. Testing for combi2:
- combi1=[0, 0, 0], combi2=[0, 0, 0] is feasible. Testing for combi3:
-- combi1=[0, 0, 0], combi2=[0, 0, 0], combi3=[0, 0, 0] could not be solved: 'Maximum_Iterations_Exceeded'
-- combi1=[0, 0, 0], combi2=[0, 0, 0], combi3=[0, 1, 0] is feasible. Testing for combi4:
--- combi1=[0, 0, 0], combi2=[0, 0, 0], combi3=[0, 1, 0], combi4=[1, 1, 1] is feasible. Testing for combi5:
---- combi1=[0, 0, 0], ..., combi5=[1, 1, 1] is feasible. Testing for combi6:
----- combi1=[0, 0, 0], ..., combi6=[1, 1, 1] is feasible. Testing for combi7:
------ combi1=[0, 0, 0], ..., combi7=[1, 1, 1] is feasible. Testing for combi8:
------- combi1=[0, 0, 0], ..., combi8=[0, 0, 0] could not be solved: 'Maximum_Iterations_Exceeded'
------- combi1=[0, 0, 0], ..., combi8=[0, 1, 0] has cost 0.606
Minimum cost 0.61$ achieved for {'combi1': [0, 0, 0], 'combi2': [0, 0, 0], 'combi3': [0, 1, 0], 'combi4': [1, 1, 1], 'combi5': [1, 1, 1], 'combi6': [1, 1, 1], 'combi7': [1, 1, 1], 'combi8': [0, 1, 0]}
Data was appended to results_2024-01-21_20-58-37.csv
#########################################

-----------------------------------------------------
Iteration 10.0 (9h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [0, 0, 0]
2h-3h: [0, 1, 0]
3h-4h: [1, 1, 1]
4h-5h: [1, 1, 1]
5h-6h: [1, 1, 1]
6h-7h: [1, 1, 1]
7h-8h: [0, 1, 0]

Solving the optimization problem...
Done in 46.9 seconds.

Initial state
B     -- 321.8 | S        317.1 --    318.2 --   321.0 --
         320.3 |          316.7       317.9      320.0
         317.9 |          316.0       317.7      319.0
      -- 314.0 |       -- 314.2    -- 317.4   -- 319.0

Next state
B <-0.0- 321.5 | S        317.0 ->    318.2 ->   321.0 -0.0->
         319.9 |          316.6       317.9      320.0
         317.2 |          315.7       317.6      319.0
  -0.0-> 313.4 |   -0.0-> 313.6    -> 317.3   -> 319.0

Q_HP = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
m_HP = 0, m_load = 0.01
Cost of next 8 hours: 0.61 $
[41.07, 41.06, 41.08, 7.16, 7.18, 7.18, 7.16, 41.2]
Previous sequence:
 {'combi1': [0, 0, 0], 'combi2': [0, 0, 0], 'combi3': [0, 1, 0], 'combi4': [1, 1, 1], 'combi5': [1, 1, 1], 'combi6': [1, 1, 1], 'combi7': [1, 1, 1], 'combi8': [0, 1, 0]}
Current sequence before comparison:
 {'combi1': [0, 0, 0], 'combi2': [0, 0, 0], 'combi3': [1, 1, 1], 'combi4': [1, 1, 1], 'combi5': [1, 1, 1], 'combi6': [1, 1, 1], 'combi7': [0, 0, 0], 'combi8': [0, 0, 0]}
Replaced [0,0,0] with [0,1,0] in combi2
Replaced [0,0,0] with [0,1,0] in combi7

-----------------------------------------------------
Iteration 11.0 (10h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [0, 1, 0]
2h-3h: [1, 1, 1]
3h-4h: [1, 1, 1]
4h-5h: [1, 1, 1]
5h-6h: [1, 1, 1]
6h-7h: [0, 1, 0]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Failed to solve: 'Maximum_Iterations_Exceeded'!

#########################################
Buffer: [321.52505887243376, 319.90546429315435, 317.2408575149279, 313.3984231821628] 
Storage: [320.80229729821275, 319.83532948844555, 319.12499502672057, 318.5948241635634, 318.199415023248, 317.8861854117109, 317.61026238527927, 317.33417218804004, 317.02155650720846, 316.59248139456406, 315.73536145475134, 313.62795579197405]
Electricity forecasts: [41.06, 41.08, 7.16, 7.18, 7.18, 7.16, 41.2, 41.64]

Searching for optimal sequence...

******* combi1=[0, 0, 0] *******
combi1 = [0, 0, 0] is feasible. Testing for combi2:
- combi1=[0, 0, 0], combi2=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
- combi1=[0, 0, 0], combi2=[0, 1, 0] is feasible. Testing for combi3:
-- combi1=[0, 0, 0], combi2=[0, 1, 0], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[0, 0, 0], combi2=[0, 1, 0], combi3=[1, 1, 1], combi4=[1, 1, 1] is feasible. Testing for combi5:
---- combi1=[0, 0, 0], ..., combi5=[1, 1, 1] is feasible. Testing for combi6:
----- combi1=[0, 0, 0], ..., combi6=[1, 1, 1] is feasible. Testing for combi7:
------ combi1=[0, 0, 0], ..., combi7=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
------ combi1=[0, 0, 0], ..., combi7=[0, 1, 0] is feasible. Testing for combi8:
------- combi1=[0, 0, 0], ..., combi8=[0, 0, 0] could not be solved: 'Maximum_Iterations_Exceeded'
------- combi1=[0, 0, 0], ..., combi8=[0, 1, 0] has cost 0.606
Minimum cost 0.61$ achieved for {'combi1': [0, 0, 0], 'combi2': [0, 1, 0], 'combi3': [1, 1, 1], 'combi4': [1, 1, 1], 'combi5': [1, 1, 1], 'combi6': [1, 1, 1], 'combi7': [0, 1, 0], 'combi8': [0, 1, 0]}
Data was appended to results_2024-01-21_20-58-37.csv
#########################################

-----------------------------------------------------
Iteration 11.0 (10h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [0, 1, 0]
2h-3h: [1, 1, 1]
3h-4h: [1, 1, 1]
4h-5h: [1, 1, 1]
5h-6h: [1, 1, 1]
6h-7h: [0, 1, 0]
7h-8h: [0, 1, 0]

Solving the optimization problem...
Done in 437.4 seconds.

Initial state
B     -- 321.5 | S        317.0 --    318.2 --   321.0 --
         319.9 |          316.6       317.9      320.0
         317.2 |          315.7       317.6      319.0
      -- 313.4 |       -- 313.6    -- 317.3   -- 319.0

Next state
B <-0.0- 321.2 | S        317.0 ->    318.2 ->   321.0 -0.0->
         319.4 |          316.4       317.8      320.0
         316.6 |          315.4       317.6      319.0
  -0.0-> 312.9 |   -0.0-> 313.1    -> 317.3   -> 319.0

Q_HP = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
m_HP = 0, m_load = 0.01
Cost of next 8 hours: 0.61 $
[41.06, 41.08, 7.16, 7.18, 7.18, 7.16, 41.2, 41.64]
Previous sequence:
 {'combi1': [0, 0, 0], 'combi2': [0, 1, 0], 'combi3': [1, 1, 1], 'combi4': [1, 1, 1], 'combi5': [1, 1, 1], 'combi6': [1, 1, 1], 'combi7': [0, 1, 0], 'combi8': [0, 1, 0]}
Current sequence before comparison:
 {'combi1': [0, 0, 0], 'combi2': [1, 1, 1], 'combi3': [1, 1, 1], 'combi4': [1, 1, 1], 'combi5': [1, 1, 1], 'combi6': [0, 0, 0], 'combi7': [0, 0, 0], 'combi8': [0, 0, 0]}
Replaced [0,0,0] with [0,1,0] in combi1
Replaced [0,0,0] with [0,1,0] in combi6
Replaced [0,0,0] with [0,1,0] in combi7

-----------------------------------------------------
Iteration 12.0 (11h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 1, 0]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [1, 1, 1]
4h-5h: [1, 1, 1]
5h-6h: [0, 1, 0]
6h-7h: [0, 1, 0]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Done in 4.7 seconds.

Initial state
B     -- 321.2 | S        317.0 --    318.2 --   321.0 --
         319.4 |          316.4       317.8      320.0
         316.6 |          315.4       317.6      319.0
      -- 312.9 |       -- 313.1    -- 317.3   -- 319.0

Next state
B -0.3-> 315.3 | S        318.8 ->    319.2 ->   315.0 -0.3->
         316.0 |          318.3       319.7      316.0
         316.7 |          318.0       319.6      317.0
  <-0.3- 317.2 |   -0.3-> 317.6    -> 319.2   -> 318.0

Q_HP = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
m_HP = 0, m_load = 0.0
Cost of next 8 hours: 0.61 $
[41.08, 7.16, 7.18, 7.18, 7.16, 41.2, 41.64, 41.43]
Previous sequence:
 {'combi1': [0, 1, 0], 'combi2': [1, 1, 1], 'combi3': [1, 1, 1], 'combi4': [1, 1, 1], 'combi5': [1, 1, 1], 'combi6': [0, 1, 0], 'combi7': [0, 1, 0], 'combi8': [0, 0, 0]}
Current sequence before comparison:
 {'combi1': [0, 0, 0], 'combi2': [1, 1, 1], 'combi3': [1, 1, 1], 'combi4': [1, 1, 1], 'combi5': [0, 0, 0], 'combi6': [0, 0, 0], 'combi7': [0, 0, 0], 'combi8': [0, 0, 0]}
Replaced [0,0,0] with [0,1,0] in combi5
Replaced [0,0,0] with [0,1,0] in combi6

-----------------------------------------------------
Iteration 13.0 (12h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [1, 1, 1]
4h-5h: [0, 1, 0]
5h-6h: [0, 1, 0]
6h-7h: [0, 0, 0]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Failed to solve: 'Infeasible_Problem_Detected'!

-----------------------------------------------------
Iteration 13.0 (12h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 1, 0]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [1, 1, 1]
4h-5h: [0, 1, 0]
5h-6h: [0, 1, 0]
6h-7h: [0, 0, 0]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Done in 4.8 seconds.

Initial state
B     -- 315.3 | S        318.8 --    319.2 --   315.0 --
         316.0 |          318.3       319.7      316.0
         316.7 |          318.0       319.6      317.0
      -- 317.2 |       -- 317.6    -- 319.2   -- 318.0

Next state
B -0.3-> 318.4 | S        317.0 ->    316.2 ->   318.0 -0.3->
         318.7 |          317.8       315.9      318.0
         319.0 |          318.5       315.9      317.0
  <-0.3- 319.1 |   -0.3-> 318.9    -> 316.3   -> 317.0

Q_HP = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
m_HP = 0, m_load = 0.0
Cost of next 8 hours: 0.46 $
[7.16, 7.18, 7.18, 7.16, 41.2, 41.64, 41.43, 41.51]
Previous sequence:
 {'combi1': [0, 1, 0], 'combi2': [1, 1, 1], 'combi3': [1, 1, 1], 'combi4': [1, 1, 1], 'combi5': [0, 1, 0], 'combi6': [0, 1, 0], 'combi7': [0, 0, 0], 'combi8': [0, 0, 0]}
Current sequence before comparison:
 {'combi1': [0, 0, 0], 'combi2': [1, 1, 1], 'combi3': [1, 1, 1], 'combi4': [0, 0, 0], 'combi5': [0, 0, 0], 'combi6': [0, 0, 0], 'combi7': [0, 0, 0], 'combi8': [1, 1, 1]}
Replaced [0,0,0] with [0,1,0] in combi4
Replaced [0,0,0] with [0,1,0] in combi5

-----------------------------------------------------
Iteration 14.0 (13h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [0, 1, 0]
4h-5h: [0, 1, 0]
5h-6h: [0, 0, 0]
6h-7h: [0, 0, 0]
7h-8h: [1, 1, 1]

Solving the optimization problem...
Failed to solve: 'Infeasible_Problem_Detected'!

-----------------------------------------------------
Iteration 14.0 (13h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 1, 0]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [0, 1, 0]
4h-5h: [0, 1, 0]
5h-6h: [0, 0, 0]
6h-7h: [0, 0, 0]
7h-8h: [1, 1, 1]

Solving the optimization problem...
Done in 42.1 seconds.

Initial state
B     -- 318.4 | S        317.0 --    316.2 --   318.0 --
         318.7 |          317.8       315.9      318.0
         319.0 |          318.5       315.9      317.0
      -- 319.1 |       -- 318.9    -- 316.3   -- 317.0

Next state
B -0.3-> 318.0 | S        316.8 ->    318.4 ->   318.0 -0.3->
         317.5 |          316.5       318.1      319.0
         317.0 |          316.3       317.7      319.0
  <-0.3- 316.5 |   -0.3-> 316.3    -> 317.2   -> 319.0

Q_HP = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
m_HP = 0, m_load = 0.0
Cost of next 8 hours: 0.45 $
[7.18, 7.18, 7.16, 41.2, 41.64, 41.43, 41.51, 6.84]
Previous sequence:
 {'combi1': [0, 1, 0], 'combi2': [1, 1, 1], 'combi3': [1, 1, 1], 'combi4': [0, 1, 0], 'combi5': [0, 1, 0], 'combi6': [0, 0, 0], 'combi7': [0, 0, 0], 'combi8': [1, 1, 1]}
Current sequence before comparison:
 {'combi1': [0, 0, 0], 'combi2': [1, 1, 1], 'combi3': [0, 0, 0], 'combi4': [0, 0, 0], 'combi5': [0, 0, 0], 'combi6': [0, 0, 0], 'combi7': [1, 1, 1], 'combi8': [1, 1, 1]}
Replaced [0,0,0] with [0,1,0] in combi3
Replaced [0,0,0] with [0,1,0] in combi4

-----------------------------------------------------
Iteration 15.0 (14h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [1, 1, 1]
2h-3h: [0, 1, 0]
3h-4h: [0, 1, 0]
4h-5h: [0, 0, 0]
5h-6h: [0, 0, 0]
6h-7h: [1, 1, 1]
7h-8h: [1, 1, 1]

Solving the optimization problem...
Failed to solve: 'Infeasible_Problem_Detected'!

-----------------------------------------------------
Iteration 15.0 (14h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 1, 0]
1h-2h: [1, 1, 1]
2h-3h: [0, 1, 0]
3h-4h: [0, 1, 0]
4h-5h: [0, 0, 0]
5h-6h: [0, 0, 0]
6h-7h: [1, 1, 1]
7h-8h: [1, 1, 1]

Solving the optimization problem...
Done in 45.3 seconds.

Initial state
B     -- 318.0 | S        316.8 --    318.4 --   318.0 --
         317.5 |          316.5       318.1      319.0
         317.0 |          316.3       317.7      319.0
      -- 316.5 |       -- 316.3    -- 317.2   -- 319.0

Next state
B -0.3-> 316.6 | S        318.5 ->    317.8 ->   317.0 -0.3->
         316.8 |          318.3       318.1      317.0
         317.1 |          318.1       318.4      317.0
  <-0.3- 317.4 |   -0.3-> 317.7    -> 318.5   -> 317.0

Q_HP = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
m_HP = 0, m_load = 0.0
Cost of next 8 hours: 0.44 $
[7.18, 7.16, 41.2, 41.64, 41.43, 41.51, 6.84, 6.65]
Previous sequence:
 {'combi1': [0, 1, 0], 'combi2': [1, 1, 1], 'combi3': [0, 1, 0], 'combi4': [0, 1, 0], 'combi5': [0, 0, 0], 'combi6': [0, 0, 0], 'combi7': [1, 1, 1], 'combi8': [1, 1, 1]}
Current sequence before comparison:
 {'combi1': [1, 1, 1], 'combi2': [0, 0, 0], 'combi3': [0, 0, 0], 'combi4': [0, 0, 0], 'combi5': [0, 0, 0], 'combi6': [1, 1, 1], 'combi7': [1, 1, 1], 'combi8': [1, 1, 1]}
Replaced [0,0,0] with [0,1,0] in combi2
Replaced [0,0,0] with [0,1,0] in combi3

-----------------------------------------------------
Iteration 16.0 (15h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [1, 1, 1]
1h-2h: [0, 1, 0]
2h-3h: [0, 1, 0]
3h-4h: [0, 0, 0]
4h-5h: [0, 0, 0]
5h-6h: [1, 1, 1]
6h-7h: [1, 1, 1]
7h-8h: [1, 1, 1]

Solving the optimization problem...
Done in 15.2 seconds.

Initial state
B     -- 316.6 | S        318.5 --    317.8 --   317.0 --
         316.8 |          318.3       318.1      317.0
         317.1 |          318.1       318.4      317.0
      -- 317.4 |       -- 317.7    -- 318.5   -- 317.0

Next state
B -0.2-> 323.3 | S        319.1 <-    322.3 <-   323.0 <-0.3-
         323.2 |          318.3       321.7      323.0
         322.9 |          317.7       321.0      323.0
  <-0.2- 322.4 |   <-0.3- 317.5    <- 320.1   <- 323.0

Q_HP = [8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000]
m_HP = 0.5, m_load = 0.0
Cost of next 8 hours: 0.57 $
[7.16, 41.2, 41.64, 41.43, 41.51, 6.84, 6.65, 6.46]
Previous sequence:
 {'combi1': [1, 1, 1], 'combi2': [0, 1, 0], 'combi3': [0, 1, 0], 'combi4': [0, 0, 0], 'combi5': [0, 0, 0], 'combi6': [1, 1, 1], 'combi7': [1, 1, 1], 'combi8': [1, 1, 1]}
Current sequence before comparison:
 {'combi1': [0, 0, 0], 'combi2': [0, 0, 0], 'combi3': [0, 0, 0], 'combi4': [0, 0, 0], 'combi5': [1, 1, 1], 'combi6': [1, 1, 1], 'combi7': [1, 1, 1], 'combi8': [1, 1, 1]}
Replaced [0,0,0] with [0,1,0] in combi1
Replaced [0,0,0] with [0,1,0] in combi2

-----------------------------------------------------
Iteration 17.0 (16h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 1, 0]
1h-2h: [0, 1, 0]
2h-3h: [0, 0, 0]
3h-4h: [0, 0, 0]
4h-5h: [1, 1, 1]
5h-6h: [1, 1, 1]
6h-7h: [1, 1, 1]
7h-8h: [1, 1, 1]

Solving the optimization problem...
Done in 28.0 seconds.

Initial state
B     -- 323.3 | S        319.1 --    322.3 --   323.0 --
         323.2 |          318.3       321.7      323.0
         322.9 |          317.7       321.0      323.0
      -- 322.4 |       -- 317.5    -- 320.1   -- 323.0

Next state
B -0.3-> 319.2 | S        323.0 ->    322.3 ->   319.0 -0.3->
         319.7 |          322.7       322.8      320.0
         320.4 |          322.3       323.1      320.0
  <-0.3- 321.2 |   -0.3-> 321.8    -> 323.1   -> 321.0

Q_HP = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
m_HP = 0, m_load = 0.0
Cost of next 8 hours: 0.56 $
[41.2, 41.64, 41.43, 41.51, 6.84, 6.65, 6.46, 6.4]
Previous sequence:
 {'combi1': [0, 1, 0], 'combi2': [0, 1, 0], 'combi3': [0, 0, 0], 'combi4': [0, 0, 0], 'combi5': [1, 1, 1], 'combi6': [1, 1, 1], 'combi7': [1, 1, 1], 'combi8': [1, 1, 1]}
Current sequence before comparison:
 {'combi1': [0, 0, 0], 'combi2': [0, 0, 0], 'combi3': [0, 0, 0], 'combi4': [1, 1, 1], 'combi5': [1, 1, 1], 'combi6': [1, 1, 1], 'combi7': [1, 1, 1], 'combi8': [1, 1, 1]}
Replaced [0,0,0] with [0,1,0] in combi1

-----------------------------------------------------
Iteration 18.0 (17h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 1, 0]
1h-2h: [0, 0, 0]
2h-3h: [0, 0, 0]
3h-4h: [1, 1, 1]
4h-5h: [1, 1, 1]
5h-6h: [1, 1, 1]
6h-7h: [1, 1, 1]
7h-8h: [1, 1, 1]

Solving the optimization problem...
Done in 36.3 seconds.

Initial state
B     -- 319.2 | S        323.0 --    322.3 --   319.0 --
         319.7 |          322.7       322.8      320.0
         320.4 |          322.3       323.1      320.0
      -- 321.2 |       -- 321.8    -- 323.1   -- 321.0

Next state
B -0.3-> 322.6 | S        320.4 ->    320.2 ->   322.0 -0.3->
         322.8 |          321.1       319.9      322.0
         322.8 |          321.7       319.8      321.0
  <-0.3- 322.6 |   -0.3-> 322.3    -> 320.0   -> 321.0

Q_HP = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
m_HP = 0, m_load = 0.0
Cost of next 8 hours: 0.69 $
[41.64, 41.43, 41.51, 6.84, 6.65, 6.46, 6.4, 6.36]
Previous sequence:
 {'combi1': [0, 1, 0], 'combi2': [0, 0, 0], 'combi3': [0, 0, 0], 'combi4': [1, 1, 1], 'combi5': [1, 1, 1], 'combi6': [1, 1, 1], 'combi7': [1, 1, 1], 'combi8': [1, 1, 1]}
Current sequence before comparison:
 {'combi1': [0, 0, 0], 'combi2': [0, 0, 0], 'combi3': [1, 1, 1], 'combi4': [1, 1, 1], 'combi5': [1, 1, 1], 'combi6': [1, 1, 1], 'combi7': [1, 1, 1], 'combi8': [1, 1, 1]}

-----------------------------------------------------
Iteration 19.0 (18h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [0, 0, 0]
2h-3h: [1, 1, 1]
3h-4h: [1, 1, 1]
4h-5h: [1, 1, 1]
5h-6h: [1, 1, 1]
6h-7h: [1, 1, 1]
7h-8h: [1, 1, 1]

Solving the optimization problem...
Done in 35.8 seconds.

Initial state
B     -- 322.6 | S        320.4 --    320.2 --   322.0 --
         322.8 |          321.1       319.9      322.0
         322.8 |          321.7       319.8      321.0
      -- 322.6 |       -- 322.3    -- 320.0   -- 321.0

Next state
B <-0.0- 322.6 | S        320.6 ->    320.1 ->   322.0 -0.0->
         322.7 |          321.2       319.8      322.0
         322.3 |          321.4       319.8      321.0
  -0.0-> 319.4 |   -0.0-> 319.3    -> 320.1   -> 321.0

Q_HP = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
m_HP = 0, m_load = 0.02
Cost of next 8 hours: 0.82 $
[41.43, 41.51, 6.84, 6.65, 6.46, 6.4, 6.36, 6.34]
Previous sequence:
 {'combi1': [0, 0, 0], 'combi2': [0, 0, 0], 'combi3': [1, 1, 1], 'combi4': [1, 1, 1], 'combi5': [1, 1, 1], 'combi6': [1, 1, 1], 'combi7': [1, 1, 1], 'combi8': [1, 1, 1]}
Current sequence before comparison:
 {'combi1': [0, 0, 0], 'combi2': [1, 1, 1], 'combi3': [1, 1, 1], 'combi4': [1, 1, 1], 'combi5': [1, 1, 1], 'combi6': [1, 1, 1], 'combi7': [1, 1, 1], 'combi8': [1, 1, 1]}

-----------------------------------------------------
Iteration 20.0 (19h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [1, 1, 1]
4h-5h: [1, 1, 1]
5h-6h: [1, 1, 1]
6h-7h: [1, 1, 1]
7h-8h: [1, 1, 1]

Solving the optimization problem...
Failed to solve: 'Infeasible_Problem_Detected'!

#########################################
Buffer: [322.64538284428346, 322.72989208196265, 322.2651466971813, 319.39895878226474] 
Storage: [322.1265423360521, 321.65290638591193, 321.1108738599552, 320.56686643179063, 320.11244173427116, 319.847647693752, 319.8482386214785, 320.1312097654483, 320.63818662122605, 321.2251432862148, 321.44347189279006, 319.3017484894122]
Electricity forecasts: [41.51, 6.84, 6.65, 6.46, 6.4, 6.36, 6.34, 6.34]

Searching for optimal sequence...

******* combi1=[0, 0, 0] *******
combi1 = [0, 0, 0] is feasible. Testing for combi2:
- combi1=[0, 0, 0], combi2=[1, 1, 1] is feasible. Testing for combi3:
-- combi1=[0, 0, 0], combi2=[1, 1, 1], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[0, 0, 0], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[1, 1, 1] is feasible. Testing for combi5:
---- combi1=[0, 0, 0], ..., combi5=[1, 1, 1] is feasible. Testing for combi6:
----- combi1=[0, 0, 0], ..., combi6=[1, 1, 1] is feasible. Testing for combi7:
------ combi1=[0, 0, 0], ..., combi7=[1, 1, 1] is feasible. Testing for combi8:
------- combi1=[0, 0, 0], ..., combi8=[1, 1, 1] could not be solved: 'Infeasible_Problem_Detected'
------- combi1=[0, 0, 0], ..., combi8=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
------ combi1=[0, 0, 0], ..., combi7=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
----- combi1=[0, 0, 0], ..., combi6=[1, 0, 1] is feasible. Testing for combi7:
------ combi1=[0, 0, 0], ..., combi7=[1, 1, 1] is feasible. Testing for combi8:
------- combi1=[0, 0, 0], ..., combi8=[1, 1, 1] could not be solved: 'Infeasible_Problem_Detected'
------- combi1=[0, 0, 0], ..., combi8=[1, 0, 1] could not be solved: 'Infeasible_Problem_Detected'
------ combi1=[0, 0, 0], ..., combi7=[1, 0, 1] is feasible. Testing for combi8:
------- combi1=[0, 0, 0], ..., combi8=[1, 1, 1] could not be solved: 'Infeasible_Problem_Detected'

