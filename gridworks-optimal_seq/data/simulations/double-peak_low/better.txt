(ada) thomasdefauw@MBP-2011 gridworks % python master.py

Problem type: Non-linear
Variables: Continuous (relaxed or fixed binary)
Solver: Ipopt

Time step: 4 minutes
Horizon: 8.0 hours (120 time steps)
Simulation: 24 hours (24 iterations)

Results file (enter to skip): 

-----------------------------------------------------
Iteration 1.0 (0h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [1, 1, 1]
4h-5h: [1, 1, 1]
5h-6h: [1, 1, 1]
6h-7h: [1, 1, 1]
7h-8h: [0, 0, 0]

Solving the optimization problem...

******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

Failed to solve: 'Infeasible_Problem_Detected'!

-----------------------------------------------------
Iteration 1.0 (0h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 1, 0]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [1, 1, 1]
4h-5h: [1, 1, 1]
5h-6h: [1, 1, 1]
6h-7h: [1, 1, 1]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Failed to solve: 'Infeasible_Problem_Detected'!

-----------------------------------------------------
Iteration 1.0 (0h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [1, 1, 1]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [1, 1, 1]
4h-5h: [1, 1, 1]
5h-6h: [1, 1, 1]
6h-7h: [1, 1, 1]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Done in 80.7 seconds.

Initial state
B     -- 314.0 | S        310.0 --    310.0 --   310.0 --
         314.6 |          310.0       310.0      310.0
         313.7 |          310.0       310.0      310.0
      -- 308.8 |       -- 310.0    -- 310.0   -- 310.0

Next state
B -0.2-> 314.9 | S        311.9 <-    314.2 <-   315.0 <-0.3-
         314.6 |          311.1       313.9      315.0
         314.4 |          310.5       313.4      315.0
  <-0.2- 314.2 |   <-0.3- 310.2    <- 312.7   <- 314.0

Q_HP = [8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000]
m_HP = 0.5, m_load = 0.05
Cost of next 8 hours: 0.95 $
[6.36, 6.34, 6.34, 6.37, 6.41, 6.46, 6.95, 41.51]

-----------------------------------------------------
Iteration 2.0 (1h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [1, 1, 1]
4h-5h: [1, 1, 1]
5h-6h: [1, 1, 1]
6h-7h: [0, 0, 0]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Failed to solve: 'Infeasible_Problem_Detected'!

-----------------------------------------------------
Iteration 2.0 (1h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 1, 0]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [1, 1, 1]
4h-5h: [1, 1, 1]
5h-6h: [1, 1, 1]
6h-7h: [0, 0, 0]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Done in 7.2 seconds.

Initial state
B     -- 314.9 | S        311.9 --    314.2 --   315.0 --
         314.6 |          311.1       313.9      315.0
         314.4 |          310.5       313.4      315.0
      -- 314.2 |       -- 310.2    -- 312.7   -- 314.0

Next state
B -0.3-> 311.6 | S        312.9 ->    312.9 ->   311.0 -0.3->
         312.1 |          312.8       313.0      312.0
         312.8 |          312.6       313.1      312.0
  <-0.3- 313.4 |   -0.3-> 312.4    -> 313.0   -> 313.0

Q_HP = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
m_HP = 0, m_load = 0.04
Cost of next 8 hours: 0.69 $
[6.34, 6.34, 6.37, 6.41, 6.46, 6.95, 41.51, 41.16]

-----------------------------------------------------
Iteration 3.0 (2h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [1, 1, 1]
4h-5h: [1, 1, 1]
5h-6h: [0, 0, 0]
6h-7h: [0, 0, 0]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Failed to solve: 'Infeasible_Problem_Detected'!

-----------------------------------------------------
Iteration 3.0 (2h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 1, 0]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [1, 1, 1]
4h-5h: [1, 1, 1]
5h-6h: [0, 0, 0]
6h-7h: [0, 0, 0]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Done in 9.0 seconds.

Initial state
B     -- 311.6 | S        312.9 --    312.9 --   311.0 --
         312.1 |          312.8       313.0      312.0
         312.8 |          312.6       313.1      312.0
      -- 313.4 |       -- 312.4    -- 313.0   -- 313.0

Next state
B -0.3-> 312.5 | S        311.0 ->    310.9 ->   312.0 -0.3->
         312.7 |          311.2       310.8      312.0
         312.9 |          311.3       310.8      312.0
  <-0.3- 312.9 |   -0.3-> 311.3    -> 310.9   -> 311.0

Q_HP = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
m_HP = 0, m_load = 0.04
Cost of next 8 hours: 0.55 $
[6.34, 6.37, 6.41, 6.46, 6.95, 41.51, 41.16, 41.07]

-----------------------------------------------------
Iteration 4.0 (3h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [1, 1, 1]
4h-5h: [0, 0, 0]
5h-6h: [0, 0, 0]
6h-7h: [0, 0, 0]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Failed to solve: 'Infeasible_Problem_Detected'!

-----------------------------------------------------
Iteration 4.0 (3h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 1, 0]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [1, 1, 1]
4h-5h: [0, 0, 0]
5h-6h: [0, 0, 0]
6h-7h: [0, 0, 0]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Done in 8.3 seconds.

Initial state
B     -- 312.5 | S        311.0 --    310.9 --   312.0 --
         312.7 |          311.2       310.8      312.0
         312.9 |          311.3       310.8      312.0
      -- 312.9 |       -- 311.3    -- 310.9   -- 311.0

Next state
B -0.1-> 311.2 | S        309.2 ->    310.8 ->   311.0 -0.2->
         311.5 |          309.0       310.5      311.0
         311.9 |          308.7       310.1      311.0
  <-0.1- 312.3 |   -0.2-> 309.6    -> 309.6   -> 311.0

Q_HP = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
m_HP = 0, m_load = 0.05
Cost of next 8 hours: 0.42 $
[6.37, 6.41, 6.46, 6.95, 41.51, 41.16, 41.07, 41.06]

-----------------------------------------------------
Iteration 5.0 (4h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [0, 0, 0]
4h-5h: [0, 0, 0]
5h-6h: [0, 0, 0]
6h-7h: [0, 0, 0]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Failed to solve: 'Restoration_Failed'!

-----------------------------------------------------
Iteration 5.0 (4h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 1, 0]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [0, 0, 0]
4h-5h: [0, 0, 0]
5h-6h: [0, 0, 0]
6h-7h: [0, 0, 0]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Failed to solve: 'Infeasible_Problem_Detected'!

-----------------------------------------------------
Iteration 5.0 (4h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [1, 1, 1]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [0, 0, 0]
4h-5h: [0, 0, 0]
5h-6h: [0, 0, 0]
6h-7h: [0, 0, 0]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Failed to solve: 'Restoration_Failed'!

#########################################
Buffer: [311.16309905757134, 311.5202958727051, 311.919276926771, 312.27840005133925] 
Storage: [310.94963090585674, 310.9050908509673, 310.91930613480184, 310.9258670861524, 310.82833291068073, 310.546230218694, 310.09267475587166, 309.6024984817264, 309.229529974587, 308.98753872347766, 308.7264198925204, 309.6313687260708]
Electricity forecasts: [6.41, 6.46, 6.95, 41.51, 41.16, 41.07, 41.06, 41.08]

Searching for optimal sequence...

******* combi1=[1, 1, 1] *******
combi1 = [1, 1, 1] is feasible. Testing for combi2:
- combi1=[1, 1, 1], combi2=[1, 1, 1] is feasible. Testing for combi3:
-- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1] is feasible. Testing for combi4:
'--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[0, 0, 0] is feasible. Testing for combi5:
---- combi1=[1, 1, 1], ..., combi5=[0, 0, 0] is feasible. Testing for combi6:
----- combi1=[1, 1, 1], ..., combi6=[0, 0, 0] is feasible. Testing for combi7:
------ combi1=[1, 1, 1], ..., combi7=[0, 0, 0] is feasible. Testing for combi8:
------- combi1=[1, 1, 1], ..., combi8=[0, 0, 0] could not be solved: 'Restoration_Failed'
------- combi1=[1, 1, 1], ..., combi8=[0, 1, 0] has cost 0.419
Minimum cost 0.42$ achieved for {'combi1': [1, 1, 1], 'combi2': [1, 1, 1], 'combi3': [1, 1, 1], 'combi4': [0, 0, 0], 'combi5': [0, 0, 0], 'combi6': [0, 0, 0], 'combi7': [0, 0, 0], 'combi8': [0, 1, 0]}
Data was appended to results_2024-01-18_11-20-15.csv
#########################################

-----------------------------------------------------
Iteration 5.0 (4h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [1, 1, 1]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [0, 0, 0]
4h-5h: [0, 0, 0]
5h-6h: [0, 0, 0]
6h-7h: [0, 0, 0]
7h-8h: [0, 1, 0]

Solving the optimization problem...
Done in 381.7 seconds.

Initial state
B     -- 311.2 | S        309.2 --    310.8 --   311.0 --
         311.5 |          309.0       310.5      311.0
         311.9 |          308.7       310.1      311.0
      -- 312.3 |       -- 309.6    -- 309.6   -- 311.0

Next state
B -0.2-> 315.1 | S        311.8 <-    313.4 <-   315.0 <-0.2-
         314.7 |          311.4       313.1      315.0
         314.2 |          311.1       312.7      314.0
  <-0.2- 313.7 |   <-0.2- 310.8    <- 312.3   <- 314.0

Q_HP = [8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000]
m_HP = 0.5, m_load = 0.05
Cost of next 8 hours: 0.42 $
[6.41, 6.46, 6.95, 41.51, 41.16, 41.07, 41.06, 41.08]

-----------------------------------------------------
Iteration 6.0 (5h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [1, 1, 1]
1h-2h: [1, 1, 1]
2h-3h: [0, 0, 0]
3h-4h: [0, 0, 0]
4h-5h: [0, 0, 0]
5h-6h: [0, 0, 0]
6h-7h: [0, 0, 0]
7h-8h: [1, 1, 1]

Solving the optimization problem...
Failed to solve: 'Maximum_Iterations_Exceeded'!

#########################################
Buffer: [315.09198154518776, 314.66031393832174, 314.1995611551173, 313.7204152988368] 
Storage: [315.0039631638596, 314.539811675016, 314.1099435319144, 313.7282098829249, 313.3970491337414, 313.0844180700357, 312.7324145690588, 312.3055834894997, 311.835842083952, 311.405472569102, 311.0744250068121, 310.8289861661106]
Electricity forecasts: [6.46, 6.95, 41.51, 41.16, 41.07, 41.06, 41.08, 7.16]

Searching for optimal sequence...

******* combi1=[1, 1, 1] *******
combi1 = [1, 1, 1] is feasible. Testing for combi2:
- combi1=[1, 1, 1], combi2=[1, 1, 1] is feasible. Testing for combi3:
-- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[1, 1, 1], combi3=[0, 0, 0], combi4=[0, 0, 0] is feasible. Testing for combi5:
---- combi1=[1, 1, 1], ..., combi5=[0, 0, 0] is feasible. Testing for combi6:
----- combi1=[1, 1, 1], ..., combi6=[0, 0, 0] is feasible. Testing for combi7:
------ combi1=[1, 1, 1], ..., combi7=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
------ combi1=[1, 1, 1], ..., combi7=[0, 1, 0] is feasible. Testing for combi8:
------- combi1=[1, 1, 1], ..., combi8=[1, 1, 1] has cost 0.434
Minimum cost 0.43$ achieved for {'combi1': [1, 1, 1], 'combi2': [1, 1, 1], 'combi3': [0, 0, 0], 'combi4': [0, 0, 0], 'combi5': [0, 0, 0], 'combi6': [0, 0, 0], 'combi7': [0, 1, 0], 'combi8': [1, 1, 1]}
Data was appended to results_2024-01-18_11-20-15.csv
#########################################

-----------------------------------------------------
Iteration 6.0 (5h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [1, 1, 1]
1h-2h: [1, 1, 1]
2h-3h: [0, 0, 0]
3h-4h: [0, 0, 0]
4h-5h: [0, 0, 0]
5h-6h: [0, 0, 0]
6h-7h: [0, 1, 0]
7h-8h: [1, 1, 1]

Solving the optimization problem...
Done in 261.6 seconds.

Initial state
B     -- 315.1 | S        311.8 --    313.4 --   315.0 --
         314.7 |          311.4       313.1      315.0
         314.2 |          311.1       312.7      314.0
      -- 313.7 |       -- 310.8    -- 312.3   -- 314.0

Next state
B -0.2-> 317.7 | S        314.7 <-    316.6 <-   318.0 <-0.2-
         317.4 |          314.3       316.2      318.0
         317.1 |          313.9       315.7      317.0
  <-0.2- 316.9 |   <-0.2- 313.5    <- 315.2   <- 317.0

Q_HP = [8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000]
m_HP = 0.5, m_load = 0.04
Cost of next 8 hours: 0.43 $
[6.46, 6.95, 41.51, 41.16, 41.07, 41.06, 41.08, 7.16]

-----------------------------------------------------
Iteration 7.0 (6h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [1, 1, 1]
1h-2h: [0, 0, 0]
2h-3h: [0, 0, 0]
3h-4h: [0, 0, 0]
4h-5h: [0, 0, 0]
5h-6h: [0, 0, 0]
6h-7h: [1, 1, 1]
7h-8h: [1, 1, 1]

Solving the optimization problem...
Failed to solve: 'Maximum_Iterations_Exceeded'!

#########################################
Buffer: [317.6602738013236, 317.40891556958724, 317.14733092644065, 316.85798555446195] 
Storage: [317.739193702286, 317.5347569558548, 317.29682656190755, 316.9971045950291, 316.6258944353706, 316.1903617610787, 315.71111281280724, 315.21675501321545, 314.7356693509905, 314.28710296773045, 313.8757410021334, 313.4923899086384]
Electricity forecasts: [6.95, 41.51, 41.16, 41.07, 41.06, 41.08, 7.16, 7.18]

Searching for optimal sequence...

******* combi1=[1, 1, 1] *******
combi1 = [1, 1, 1] is feasible. Testing for combi2:
- combi1=[1, 1, 1], combi2=[0, 0, 0] is feasible. Testing for combi3:
-- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[0, 0, 0] is feasible. Testing for combi4:
--- combi1=[1, 1, 1], combi2=[0, 0, 0], combi3=[0, 0, 0], combi4=[0, 0, 0] is feasible. Testing for combi5:
---- combi1=[1, 1, 1], ..., combi5=[0, 0, 0] is feasible. Testing for combi6:
----- combi1=[1, 1, 1], ..., combi6=[0, 0, 0] could not be solved: 'Maximum_Iterations_Exceeded'
----- combi1=[1, 1, 1], ..., combi6=[0, 1, 0] is feasible. Testing for combi7:
------ combi1=[1, 1, 1], ..., combi7=[1, 1, 1] is feasible. Testing for combi8:
------- combi1=[1, 1, 1], ..., combi8=[1, 1, 1] has cost 0.45
Minimum cost 0.45$ achieved for {'combi1': [1, 1, 1], 'combi2': [0, 0, 0], 'combi3': [0, 0, 0], 'combi4': [0, 0, 0], 'combi5': [0, 0, 0], 'combi6': [0, 1, 0], 'combi7': [1, 1, 1], 'combi8': [1, 1, 1]}
Data was appended to results_2024-01-18_11-20-15.csv
#########################################

-----------------------------------------------------
Iteration 7.0 (6h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [1, 1, 1]
1h-2h: [0, 0, 0]
2h-3h: [0, 0, 0]
3h-4h: [0, 0, 0]
4h-5h: [0, 0, 0]
5h-6h: [0, 1, 0]
6h-7h: [1, 1, 1]
7h-8h: [1, 1, 1]

Solving the optimization problem...
Done in 18.8 seconds.

Initial state
B     -- 317.7 | S        314.7 --    316.6 --   318.0 --
         317.4 |          314.3       316.2      318.0
         317.1 |          313.9       315.7      317.0
      -- 316.9 |       -- 313.5    -- 315.2   -- 317.0

Next state
B -0.3-> 323.1 | S        317.2 <-    318.4 <-   321.0 <-0.2-
         321.9 |          316.9       318.1      320.0
         321.3 |          316.6       317.8      319.0
  <-0.3- 320.9 |   <-0.2- 316.1    <- 317.5   <- 319.0

Q_HP = [8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000, 8000]
m_HP = 0.5, m_load = 0.04
Cost of next 8 hours: 0.45 $
[6.95, 41.51, 41.16, 41.07, 41.06, 41.08, 7.16, 7.18]

-----------------------------------------------------
Iteration 8.0 (7h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [0, 0, 0]
2h-3h: [0, 0, 0]
3h-4h: [0, 0, 0]
4h-5h: [0, 0, 0]
5h-6h: [1, 1, 1]
6h-7h: [1, 1, 1]
7h-8h: [1, 1, 1]

Solving the optimization problem...
Failed to solve: 'Infeasible_Problem_Detected'!

#########################################
Buffer: [323.0975880432529, 321.93556233645415, 321.28250897150383, 320.9166164405966] 
Storage: [321.42794915507017, 320.29278535447304, 319.4672754015256, 318.8469980639084, 318.39419370405074, 318.05172828390687, 317.7700032459818, 317.50735889651554, 317.23020449843966, 316.91572954140076, 316.55368236862495, 316.14616281378574]
Electricity forecasts: [41.51, 41.16, 41.07, 41.06, 41.08, 7.16, 7.18, 7.18]

Searching for optimal sequence...

******* combi1=[0, 0, 0] *******
combi1 = [0, 0, 0] is feasible. Testing for combi2:
- combi1=[0, 0, 0], combi2=[0, 0, 0] is feasible. Testing for combi3:
-- combi1=[0, 0, 0], combi2=[0, 0, 0], combi3=[0, 0, 0] is feasible. Testing for combi4:
--- combi1=[0, 0, 0], combi2=[0, 0, 0], combi3=[0, 0, 0], combi4=[0, 0, 0] is feasible. Testing for combi5:
---- combi1=[0, 0, 0], ..., combi5=[0, 0, 0] could not be solved: 'Maximum_Iterations_Exceeded'
---- combi1=[0, 0, 0], ..., combi5=[0, 1, 0] is feasible. Testing for combi6:
----- combi1=[0, 0, 0], ..., combi6=[1, 1, 1] is feasible. Testing for combi7:
------ combi1=[0, 0, 0], ..., combi7=[1, 1, 1] is feasible. Testing for combi8:
------- combi1=[0, 0, 0], ..., combi8=[1, 1, 1] has cost 0.455
Minimum cost 0.46$ achieved for {'combi1': [0, 0, 0], 'combi2': [0, 0, 0], 'combi3': [0, 0, 0], 'combi4': [0, 0, 0], 'combi5': [0, 1, 0], 'combi6': [1, 1, 1], 'combi7': [1, 1, 1], 'combi8': [1, 1, 1]}
Data was appended to results_2024-01-18_11-20-15.csv
#########################################

-----------------------------------------------------
Iteration 8.0 (7h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [0, 0, 0]
2h-3h: [0, 0, 0]
3h-4h: [0, 0, 0]
4h-5h: [0, 1, 0]
5h-6h: [1, 1, 1]
6h-7h: [1, 1, 1]
7h-8h: [1, 1, 1]

Solving the optimization problem...
Done in 33.3 seconds.

Initial state
B     -- 323.1 | S        317.2 --    318.4 --   321.0 --
         321.9 |          316.9       318.1      320.0
         321.3 |          316.6       317.8      319.0
      -- 320.9 |       -- 316.1    -- 317.5   -- 319.0

Next state
B <-0.0- 322.2 | S        317.2 ->    318.3 ->   321.0 -0.0->
         321.1 |          316.9       318.0      320.0
         319.3 |          316.4       317.7      319.0
  -0.0-> 315.5 |   -0.0-> 315.5    -> 317.5   -> 319.0

Q_HP = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
m_HP = 0, m_load = 0.03
Cost of next 8 hours: 0.46 $
[41.51, 41.16, 41.07, 41.06, 41.08, 7.16, 7.18, 7.18]

-----------------------------------------------------
Iteration 9.0 (8h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [0, 0, 0]
2h-3h: [0, 0, 0]
3h-4h: [0, 0, 0]
4h-5h: [1, 1, 1]
5h-6h: [1, 1, 1]
6h-7h: [1, 1, 1]
7h-8h: [1, 1, 1]

Solving the optimization problem...
Failed to solve: 'Infeasible_Problem_Detected'!

#########################################
Buffer: [322.2314768869416, 321.0828716127467, 319.25166713214657, 315.487907919695] 
Storage: [321.25824025521354, 320.16917118585303, 319.3745237162794, 318.77915612980473, 318.3426352711343, 318.0089799103271, 317.72980407038597, 317.4647056718894, 317.1817045124099, 316.8582610196564, 316.44957588818625, 315.46570976328394]
Electricity forecasts: [41.16, 41.07, 41.06, 41.08, 7.16, 7.18, 7.18, 7.16]

Searching for optimal sequence...

******* combi1=[0, 0, 0] *******
combi1 = [0, 0, 0] is feasible. Testing for combi2:
- combi1=[0, 0, 0], combi2=[0, 0, 0] is feasible. Testing for combi3:
-- combi1=[0, 0, 0], combi2=[0, 0, 0], combi3=[0, 0, 0] is feasible. Testing for combi4:
--- combi1=[0, 0, 0], combi2=[0, 0, 0], combi3=[0, 0, 0], combi4=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
--- combi1=[0, 0, 0], combi2=[0, 0, 0], combi3=[0, 0, 0], combi4=[0, 1, 0] is feasible. Testing for combi5:
---- combi1=[0, 0, 0], ..., combi5=[1, 1, 1] is feasible. Testing for combi6:
----- combi1=[0, 0, 0], ..., combi6=[1, 1, 1] is feasible. Testing for combi7:
------ combi1=[0, 0, 0], ..., combi7=[1, 1, 1] is feasible. Testing for combi8:
------- combi1=[0, 0, 0], ..., combi8=[1, 1, 1] has cost 0.606
Minimum cost 0.61$ achieved for {'combi1': [0, 0, 0], 'combi2': [0, 0, 0], 'combi3': [0, 0, 0], 'combi4': [0, 1, 0], 'combi5': [1, 1, 1], 'combi6': [1, 1, 1], 'combi7': [1, 1, 1], 'combi8': [1, 1, 1]}
Data was appended to results_2024-01-18_11-20-15.csv
#########################################

-----------------------------------------------------
Iteration 9.0 (8h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [0, 0, 0]
2h-3h: [0, 0, 0]
3h-4h: [0, 1, 0]
4h-5h: [1, 1, 1]
5h-6h: [1, 1, 1]
6h-7h: [1, 1, 1]
7h-8h: [1, 1, 1]

Solving the optimization problem...
Done in 25.2 seconds.

Initial state
B     -- 322.2 | S        317.2 --    318.3 --   321.0 --
         321.1 |          316.9       318.0      320.0
         319.3 |          316.4       317.7      319.0
      -- 315.5 |       -- 315.5    -- 317.5   -- 319.0

Next state
B <-0.0- 321.8 | S        317.1 ->    318.2 ->   321.0 -0.0->
         320.3 |          316.7       317.9      320.0
         317.9 |          316.0       317.7      319.0
  -0.0-> 314.0 |   -0.0-> 314.2    -> 317.4   -> 319.0

Q_HP = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
m_HP = 0, m_load = 0.02
Cost of next 8 hours: 0.61 $
[41.16, 41.07, 41.06, 41.08, 7.16, 7.18, 7.18, 7.16]

-----------------------------------------------------
Iteration 10.0 (9h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [0, 0, 0]
2h-3h: [0, 0, 0]
3h-4h: [1, 1, 1]
4h-5h: [1, 1, 1]
5h-6h: [1, 1, 1]
6h-7h: [1, 1, 1]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Failed to solve: 'Infeasible_Problem_Detected'!

#########################################
Buffer: [321.78207015369617, 320.3345066426563, 317.8935466656969, 313.9928155670948] 
Storage: [320.95316291383597, 319.94604268715455, 319.20764530068266, 318.6562422451761, 318.2477241356151, 317.92833132759773, 317.6520071381918, 317.3806546253018, 317.0823446094058, 316.70807926610564, 316.0361461463069, 314.20107963055796]
Electricity forecasts: [41.07, 41.06, 41.08, 7.16, 7.18, 7.18, 7.16, 41.2]

Searching for optimal sequence...

******* combi1=[0, 0, 0] *******
combi1 = [0, 0, 0] is feasible. Testing for combi2:
- combi1=[0, 0, 0], combi2=[0, 0, 0] is feasible. Testing for combi3:
-- combi1=[0, 0, 0], combi2=[0, 0, 0], combi3=[0, 0, 0] could not be solved: 'Maximum_Iterations_Exceeded'
-- combi1=[0, 0, 0], combi2=[0, 0, 0], combi3=[0, 1, 0] is feasible. Testing for combi4:
--- combi1=[0, 0, 0], combi2=[0, 0, 0], combi3=[0, 1, 0], combi4=[1, 1, 1] is feasible. Testing for combi5:
---- combi1=[0, 0, 0], ..., combi5=[1, 1, 1] is feasible. Testing for combi6:
----- combi1=[0, 0, 0], ..., combi6=[1, 1, 1] is feasible. Testing for combi7:
------ combi1=[0, 0, 0], ..., combi7=[1, 1, 1] is feasible. Testing for combi8:
------- combi1=[0, 0, 0], ..., combi8=[0, 0, 0] could not be solved: 'Maximum_Iterations_Exceeded'
------- combi1=[0, 0, 0], ..., combi8=[0, 1, 0] has cost 0.606
Minimum cost 0.61$ achieved for {'combi1': [0, 0, 0], 'combi2': [0, 0, 0], 'combi3': [0, 1, 0], 'combi4': [1, 1, 1], 'combi5': [1, 1, 1], 'combi6': [1, 1, 1], 'combi7': [1, 1, 1], 'combi8': [0, 1, 0]}
Data was appended to results_2024-01-18_11-20-15.csv
#########################################

-----------------------------------------------------
Iteration 10.0 (9h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [0, 0, 0]
2h-3h: [0, 1, 0]
3h-4h: [1, 1, 1]
4h-5h: [1, 1, 1]
5h-6h: [1, 1, 1]
6h-7h: [1, 1, 1]
7h-8h: [0, 1, 0]

Solving the optimization problem...
Done in 70.7 seconds.

Initial state
B     -- 321.8 | S        317.1 --    318.2 --   321.0 --
         320.3 |          316.7       317.9      320.0
         317.9 |          316.0       317.7      319.0
      -- 314.0 |       -- 314.2    -- 317.4   -- 319.0

Next state
B <-0.0- 321.5 | S        317.0 ->    318.2 ->   321.0 -0.0->
         319.9 |          316.6       317.9      320.0
         317.2 |          315.7       317.6      319.0
  -0.0-> 313.4 |   -0.0-> 313.6    -> 317.3   -> 319.0

Q_HP = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
m_HP = 0, m_load = 0.01
Cost of next 8 hours: 0.61 $
[41.07, 41.06, 41.08, 7.16, 7.18, 7.18, 7.16, 41.2]

-----------------------------------------------------
Iteration 11.0 (10h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [0, 0, 0]
2h-3h: [1, 1, 1]
3h-4h: [1, 1, 1]
4h-5h: [1, 1, 1]
5h-6h: [1, 1, 1]
6h-7h: [0, 0, 0]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Failed to solve: 'Infeasible_Problem_Detected'!

#########################################
Buffer: [321.52505887243376, 319.90546429315435, 317.2408575149279, 313.3984231821628] 
Storage: [320.80229729821275, 319.83532948844555, 319.12499502672057, 318.5948241635634, 318.199415023248, 317.8861854117109, 317.61026238527927, 317.33417218804004, 317.02155650720846, 316.59248139456406, 315.73536145475134, 313.62795579197405]
Electricity forecasts: [41.06, 41.08, 7.16, 7.18, 7.18, 7.16, 41.2, 41.64]

Searching for optimal sequence...

******* combi1=[0, 0, 0] *******
combi1 = [0, 0, 0] is feasible. Testing for combi2:
- combi1=[0, 0, 0], combi2=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
- combi1=[0, 0, 0], combi2=[0, 1, 0] is feasible. Testing for combi3:
-- combi1=[0, 0, 0], combi2=[0, 1, 0], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[0, 0, 0], combi2=[0, 1, 0], combi3=[1, 1, 1], combi4=[1, 1, 1] is feasible. Testing for combi5:
---- combi1=[0, 0, 0], ..., combi5=[1, 1, 1] is feasible. Testing for combi6:
----- combi1=[0, 0, 0], ..., combi6=[1, 1, 1] is feasible. Testing for combi7:
------ combi1=[0, 0, 0], ..., combi7=[0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'
------ combi1=[0, 0, 0], ..., combi7=[0, 1, 0] is feasible. Testing for combi8:
------- combi1=[0, 0, 0], ..., combi8=[0, 0, 0] could not be solved: 'Maximum_Iterations_Exceeded'
------- combi1=[0, 0, 0], ..., combi8=[0, 1, 0] has cost 0.606
Minimum cost 0.61$ achieved for {'combi1': [0, 0, 0], 'combi2': [0, 1, 0], 'combi3': [1, 1, 1], 'combi4': [1, 1, 1], 'combi5': [1, 1, 1], 'combi6': [1, 1, 1], 'combi7': [0, 1, 0], 'combi8': [0, 1, 0]}
Data was appended to results_2024-01-18_11-20-15.csv
#########################################

-----------------------------------------------------
Iteration 11.0 (10h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [0, 1, 0]
2h-3h: [1, 1, 1]
3h-4h: [1, 1, 1]
4h-5h: [1, 1, 1]
5h-6h: [1, 1, 1]
6h-7h: [0, 1, 0]
7h-8h: [0, 1, 0]

Solving the optimization problem...
Done in 677.1 seconds.

Initial state
B     -- 321.5 | S        317.0 --    318.2 --   321.0 --
         319.9 |          316.6       317.9      320.0
         317.2 |          315.7       317.6      319.0
      -- 313.4 |       -- 313.6    -- 317.3   -- 319.0

Next state
B <-0.0- 321.2 | S        317.0 ->    318.2 ->   321.0 -0.0->
         319.4 |          316.4       317.8      320.0
         316.6 |          315.4       317.6      319.0
  -0.0-> 312.9 |   -0.0-> 313.1    -> 317.3   -> 319.0

Q_HP = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
m_HP = 0, m_load = 0.01
Cost of next 8 hours: 0.61 $
[41.06, 41.08, 7.16, 7.18, 7.18, 7.16, 41.2, 41.64]

-----------------------------------------------------
Iteration 12.0 (11h0min)
-----------------------------------------------------

Setting all constraints with the requested sequence...
0h-1h: [0, 0, 0]
1h-2h: [1, 1, 1]
2h-3h: [1, 1, 1]
3h-4h: [1, 1, 1]
4h-5h: [1, 1, 1]
5h-6h: [0, 0, 0]
6h-7h: [0, 0, 0]
7h-8h: [0, 0, 0]

Solving the optimization problem...
Failed to solve: 'Infeasible_Problem_Detected'!

#########################################
Buffer: [321.2418721373084, 319.447679334669, 316.60863385548447, 312.8683362473453] 
Storage: [320.6557350551739, 319.72757668683533, 319.04456596262565, 318.53463208590614, 318.15142232600203, 317.84353851520086, 317.56716015509994, 317.2844180900798, 316.9501048922715, 316.4460951969093, 315.39525579534916, 313.0998499716052]
Electricity forecasts: [41.08, 7.16, 7.18, 7.18, 7.16, 41.2, 41.64, 41.43]

Searching for optimal sequence...

******* combi1=[0, 0, 0] *******
combi1 = [0, 0, 0] could not be solved: 'Infeasible_Problem_Detected'

******* combi1=[0, 1, 0] *******
combi1 = [0, 1, 0] is feasible. Testing for combi2:
- combi1=[0, 1, 0], combi2=[1, 1, 1] is feasible. Testing for combi3:
-- combi1=[0, 1, 0], combi2=[1, 1, 1], combi3=[1, 1, 1] is feasible. Testing for combi4:
--- combi1=[0, 1, 0], combi2=[1, 1, 1], combi3=[1, 1, 1], combi4=[1, 1, 1] is feasible. Testing for combi5:
---- combi1=[0, 1, 0], ..., combi5=[1, 1, 1] is feasible. Testing for combi6:
----- combi1=[0, 1, 0], ..., combi6=[0, 0, 0] could not be solved: 'Maximum_Iterations_Exceeded'
^C^C^CTraceback (most recent call last):
  File "/Users/thomasdefauw/miniconda3/envs/ada/lib/python3.8/site-packages/casadi/casadi.py", line 13974, in <lambda>
    __setattr__ = lambda self, name, value: _swig_setattr(self, MX, name, value)
KeyboardInterrupt

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "master.py", line 134, in <module>
    u_opt, x_opt, obj_opt, error = optimizer.optimize_N_steps(x_0, a, 15*iter, pb_type, sequence, warm_start, True)
  File "/Users/thomasdefauw/Desktop/repo/gridworks/forecasts.py", line 342, in get_optimal_sequence
    cost6, x_opt, u_opt, error = one_iteration(initial_state, iter, sequence, 90, x_opt_prev, u_opt_prev)
  File "/Users/thomasdefauw/Desktop/repo/gridworks/forecasts.py", line 160, in one_iteration
    u_opt, x_opt, obj_opt, error = optimizer.optimize_N_steps(x_0, 0, iter, pb_type, sequence, warm_start, False)
  File "/Users/thomasdefauw/Desktop/repo/gridworks/optimizer.py", line 267, in optimize_N_steps
    opti.subject_to(x[:,t+1] == dynamics(u[:,t], x[:,t], a, real, approx, delta_t_s, t, sequence, iter))
  File "/Users/thomasdefauw/Desktop/repo/gridworks/optimizer.py", line 75, in dynamics
    Q_conv_S[4*(i-1)+(j-1)] = get_function(f"Q_conv_S{i}{j}", u_t, x_t, a, real, approx, t, sequence, iter, delta_t_h)
  File "/Users/thomasdefauw/Desktop/repo/gridworks/functions.py", line 332, in get_function
    f = functions_exact_sym(id, u, x, combi, m_load)
  File "/Users/thomasdefauw/Desktop/repo/gridworks/functions.py", line 152, in functions_exact_sym
    T_sup_load = (m_HP*T_sup_HP*delta_HP + m_stor*T_S11*(1-delta_ch) + m_buffer*T_B1*(1-delta_bu)) / (m_HP*delta_HP + m_stor*(1-delta_ch) + m_buffer*(1-delta_bu) + epsilon)
  File "/Users/thomasdefauw/miniconda3/envs/ada/lib/python3.8/site-packages/casadi/casadi.py", line 9039, in __mul__
    def __mul__(x, y): return _casadi.times(x, y)
SystemError: <built-in function times> returned a result with an error set
(ada) thomasdefauw@MBP-2011 gridworks % 
